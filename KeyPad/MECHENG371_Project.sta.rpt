TimeQuest Timing Analyzer report for MECHENG371_Project
Fri Sep 23 14:47:48 2016
Quartus II 64-Bit Version 12.0 Build 178 05/31/2012 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk_div:c1|clk_out'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Setup: 'shiftReg:sB|ShiftedValues[4]'
 14. Slow Model Setup: 'shiftReg:sB|ShiftedValues[0]'
 15. Slow Model Hold: 'shiftReg:sB|ShiftedValues[0]'
 16. Slow Model Hold: 'shiftReg:sB|ShiftedValues[4]'
 17. Slow Model Hold: 'CLOCK_50'
 18. Slow Model Hold: 'clk_div:c1|clk_out'
 19. Slow Model Minimum Pulse Width: 'CLOCK_50'
 20. Slow Model Minimum Pulse Width: 'clk_div:c1|clk_out'
 21. Slow Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[0]'
 22. Slow Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[4]'
 23. Setup Times
 24. Hold Times
 25. Clock to Output Times
 26. Minimum Clock to Output Times
 27. Fast Model Setup Summary
 28. Fast Model Hold Summary
 29. Fast Model Recovery Summary
 30. Fast Model Removal Summary
 31. Fast Model Minimum Pulse Width Summary
 32. Fast Model Setup: 'clk_div:c1|clk_out'
 33. Fast Model Setup: 'CLOCK_50'
 34. Fast Model Setup: 'shiftReg:sB|ShiftedValues[0]'
 35. Fast Model Setup: 'shiftReg:sB|ShiftedValues[4]'
 36. Fast Model Hold: 'shiftReg:sB|ShiftedValues[0]'
 37. Fast Model Hold: 'CLOCK_50'
 38. Fast Model Hold: 'clk_div:c1|clk_out'
 39. Fast Model Hold: 'shiftReg:sB|ShiftedValues[4]'
 40. Fast Model Minimum Pulse Width: 'CLOCK_50'
 41. Fast Model Minimum Pulse Width: 'clk_div:c1|clk_out'
 42. Fast Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[0]'
 43. Fast Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[4]'
 44. Setup Times
 45. Hold Times
 46. Clock to Output Times
 47. Minimum Clock to Output Times
 48. Multicorner Timing Analysis Summary
 49. Setup Times
 50. Hold Times
 51. Clock to Output Times
 52. Minimum Clock to Output Times
 53. Setup Transfers
 54. Hold Transfers
 55. Report TCCS
 56. Report RSKM
 57. Unconstrained Paths
 58. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2012 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                      ;
+--------------------+---------------------------------------------------+
; Quartus II Version ; Version 12.0 Build 178 05/31/2012 SJ Full Version ;
; Revision Name      ; MECHENG371_Project                                ;
; Device Family      ; Cyclone II                                        ;
; Device Name        ; EP2C35F672C6                                      ;
; Timing Models      ; Final                                             ;
; Delay Model        ; Combined                                          ;
; Rise/Fall Delays   ; Unavailable                                       ;
+--------------------+---------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 4           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     1 processor            ; 100.0%      ;
;     2-4 processors         ; < 0.1%      ;
+----------------------------+-------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                     ;
+------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------+
; Clock Name                   ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                          ;
+------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------+
; clk_div:c1|clk_out           ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_div:c1|clk_out }           ;
; CLOCK_50                     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                     ;
; shiftReg:sB|ShiftedValues[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { shiftReg:sB|ShiftedValues[0] } ;
; shiftReg:sB|ShiftedValues[4] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { shiftReg:sB|ShiftedValues[4] } ;
+------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------+


+----------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                ;
+-------------+-----------------+------------------------------+-------------------------+
; Fmax        ; Restricted Fmax ; Clock Name                   ; Note                    ;
+-------------+-----------------+------------------------------+-------------------------+
; INF MHz     ; 165.4 MHz       ; shiftReg:sB|ShiftedValues[0] ; limit due to hold check ;
; 210.48 MHz  ; 210.48 MHz      ; clk_div:c1|clk_out           ;                         ;
; 296.38 MHz  ; 296.38 MHz      ; CLOCK_50                     ;                         ;
; 1718.21 MHz ; 183.42 MHz      ; shiftReg:sB|ShiftedValues[4] ; limit due to hold check ;
+-------------+-----------------+------------------------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-------------------------------------------------------+
; Slow Model Setup Summary                              ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; clk_div:c1|clk_out           ; -3.751 ; -115.904      ;
; CLOCK_50                     ; -2.374 ; -43.934       ;
; shiftReg:sB|ShiftedValues[4] ; -0.805 ; -2.753        ;
; shiftReg:sB|ShiftedValues[0] ; -0.722 ; -1.549        ;
+------------------------------+--------+---------------+


+-------------------------------------------------------+
; Slow Model Hold Summary                               ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; shiftReg:sB|ShiftedValues[0] ; -3.023 ; -16.065       ;
; shiftReg:sB|ShiftedValues[4] ; -2.726 ; -10.505       ;
; CLOCK_50                     ; -2.526 ; -2.526        ;
; clk_div:c1|clk_out           ; -2.521 ; -2.521        ;
+------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; CLOCK_50                     ; -1.380 ; -28.380       ;
; clk_div:c1|clk_out           ; -0.500 ; -126.000      ;
; shiftReg:sB|ShiftedValues[0] ; 0.500  ; 0.000         ;
; shiftReg:sB|ShiftedValues[4] ; 0.500  ; 0.000         ;
+------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_div:c1|clk_out'                                                                                                                          ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+
; Slack  ; From Node                            ; To Node                      ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+
; -3.751 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.786      ;
; -3.749 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.784      ;
; -3.748 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.783      ;
; -3.744 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.779      ;
; -3.696 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.731      ;
; -3.694 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.729      ;
; -3.693 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.728      ;
; -3.689 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.724      ;
; -3.567 ; keypad:k1|value[2]                   ; shiftReg:sB|ShiftedValues[2] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.284     ; 3.319      ;
; -3.566 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.603      ;
; -3.564 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.601      ;
; -3.563 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.600      ;
; -3.559 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.596      ;
; -3.527 ; keypad:k1|value[3]                   ; shiftReg:sB|ShiftedValues[3] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.284     ; 3.279      ;
; -3.524 ; keypad:k1|value[1]                   ; shiftReg:sB|ShiftedValues[1] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.284     ; 3.276      ;
; -3.389 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 4.427      ;
; -3.387 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 4.425      ;
; -3.386 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 4.424      ;
; -3.382 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 4.420      ;
; -3.361 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.396      ;
; -3.359 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.394      ;
; -3.358 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.393      ;
; -3.354 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.389      ;
; -3.335 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.370      ;
; -3.334 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.369      ;
; -3.333 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.368      ;
; -3.332 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.367      ;
; -3.332 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.367      ;
; -3.331 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.366      ;
; -3.330 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.367      ;
; -3.328 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.363      ;
; -3.328 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.365      ;
; -3.327 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.364      ;
; -3.327 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.362      ;
; -3.323 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.360      ;
; -3.321 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.356      ;
; -3.288 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.323      ;
; -3.286 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.321      ;
; -3.285 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.320      ;
; -3.281 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.316      ;
; -3.277 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.312      ;
; -3.275 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.310      ;
; -3.274 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.309      ;
; -3.270 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.305      ;
; -3.266 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.301      ;
; -3.265 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.301      ;
; -3.263 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.299      ;
; -3.262 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.298      ;
; -3.258 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.294      ;
; -3.256 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.293      ;
; -3.254 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.291      ;
; -3.253 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.290      ;
; -3.249 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.286      ;
; -3.224 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.259      ;
; -3.222 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.257      ;
; -3.221 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.256      ;
; -3.217 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 4.252      ;
; -3.208 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.244      ;
; -3.206 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.242      ;
; -3.205 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.241      ;
; -3.201 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.237      ;
; -3.194 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.230      ;
; -3.192 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.228      ;
; -3.191 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.227      ;
; -3.187 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 4.223      ;
; -3.136 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 4.173      ;
; -2.959 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 3.997      ;
; -2.957 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.992      ;
; -2.955 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.990      ;
; -2.954 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.989      ;
; -2.950 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.985      ;
; -2.931 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.966      ;
; -2.905 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.940      ;
; -2.904 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.939      ;
; -2.900 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 3.937      ;
; -2.858 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.893      ;
; -2.847 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.882      ;
; -2.835 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 3.871      ;
; -2.826 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 3.863      ;
; -2.794 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.829      ;
; -2.778 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 3.814      ;
; -2.764 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 3.800      ;
; -2.527 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 3.562      ;
; -2.494 ; keypad:k1|value[0]                   ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.020      ; 3.550      ;
; -2.406 ; keypad:k1|value[3]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.465      ;
; -2.405 ; keypad:k1|value[3]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.464      ;
; -2.309 ; keypad:k1|key_press                  ; key_press1                   ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.025      ; 3.370      ;
; -2.304 ; keypad:k1|key_press                  ; Enable[1]                    ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.025      ; 3.365      ;
; -2.212 ; keypad:k1|value[2]                   ; Operator[2]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.271      ;
; -2.209 ; keypad:k1|value[2]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.268      ;
; -2.208 ; keypad:k1|value[2]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.267      ;
; -2.150 ; keypad:k1|value[0]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.209      ;
; -2.102 ; keypad:k1|value[3]                   ; Operator[2]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.161      ;
; -1.983 ; keypad:k1|value[1]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.023      ; 3.042      ;
; -1.928 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[7] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.101     ; 1.863      ;
; -1.928 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[6] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.101     ; 1.863      ;
; -1.928 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[5] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.101     ; 1.863      ;
; -1.880 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[3] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.309     ; 1.607      ;
; -1.880 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[2] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.309     ; 1.607      ;
; -1.880 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[1] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -1.309     ; 1.607      ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                   ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -2.374 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.401      ;
; -2.312 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.339      ;
; -2.303 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.330      ;
; -2.277 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.304      ;
; -2.241 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.268      ;
; -2.235 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.232 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.259      ;
; -2.214 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.241      ;
; -2.206 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.233      ;
; -2.206 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.233      ;
; -2.185 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.212      ;
; -2.185 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.212      ;
; -2.177 ; clk_div:c1|counter[14] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.213      ;
; -2.177 ; clk_div:c1|counter[14] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.213      ;
; -2.170 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.197      ;
; -2.161 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.188      ;
; -2.152 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.179      ;
; -2.135 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.162      ;
; -2.135 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.162      ;
; -2.134 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.161      ;
; -2.134 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.161      ;
; -2.113 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.140      ;
; -2.099 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.126      ;
; -2.096 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.123      ;
; -2.090 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.117      ;
; -2.071 ; clk_div:c1|counter[13] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.107      ;
; -2.071 ; clk_div:c1|counter[13] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.107      ;
; -2.064 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.091      ;
; -2.064 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.091      ;
; -2.051 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.078      ;
; -2.050 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.077      ;
; -2.046 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.073      ;
; -2.040 ; clk_div:c1|counter[15] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.076      ;
; -2.040 ; clk_div:c1|counter[15] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.076      ;
; -2.028 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.055      ;
; -2.025 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.052      ;
; -1.997 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.024      ;
; -1.997 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.024      ;
; -1.993 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.020      ;
; -1.993 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.020      ;
; -1.979 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.006      ;
; -1.974 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.001      ;
; -1.954 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.981      ;
; -1.945 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.972      ;
; -1.940 ; clk_div:c1|counter[23] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.985      ;
; -1.939 ; clk_div:c1|counter[23] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.984      ;
; -1.938 ; clk_div:c1|counter[23] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.983      ;
; -1.931 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.958      ;
; -1.922 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.949      ;
; -1.917 ; clk_div:c1|counter[23] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.953      ;
; -1.917 ; clk_div:c1|counter[23] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.953      ;
; -1.908 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.935      ;
; -1.903 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.930      ;
; -1.893 ; clk_div:c1|counter[20] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.938      ;
; -1.892 ; clk_div:c1|counter[20] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.937      ;
; -1.891 ; clk_div:c1|counter[20] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.936      ;
; -1.890 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.917      ;
; -1.888 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.915      ;
; -1.883 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.910      ;
; -1.873 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.900      ;
; -1.870 ; clk_div:c1|counter[20] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.906      ;
; -1.870 ; clk_div:c1|counter[20] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.906      ;
; -1.869 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.896      ;
; -1.860 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.887      ;
; -1.848 ; clk_div:c1|counter[12] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.875      ;
; -1.848 ; clk_div:c1|counter[12] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.875      ;
; -1.837 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.864      ;
; -1.834 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.861      ;
; -1.833 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.860      ;
; -1.832 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.859      ;
; -1.812 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.839      ;
; -1.806 ; clk_div:c1|counter[21] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.851      ;
; -1.805 ; clk_div:c1|counter[21] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.850      ;
; -1.804 ; clk_div:c1|counter[21] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.849      ;
; -1.802 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.829      ;
; -1.798 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.825      ;
; -1.789 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.816      ;
; -1.789 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[6]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.825      ;
; -1.783 ; clk_div:c1|counter[21] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.819      ;
; -1.783 ; clk_div:c1|counter[21] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.819      ;
; -1.778 ; clk_div:c1|counter[23] ; clk_div:c1|clk_out     ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.823      ;
; -1.777 ; clk_div:c1|counter[23] ; clk_div:c1|counter[6]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.822      ;
; -1.768 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[8]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.804      ;
; -1.766 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.793      ;
; -1.765 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.792      ;
; -1.765 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.792      ;
; -1.763 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.790      ;
; -1.763 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.790      ;
; -1.762 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.789      ;
; -1.761 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.788      ;
; -1.748 ; clk_div:c1|counter[17] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.793      ;
; -1.747 ; clk_div:c1|counter[17] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.792      ;
; -1.746 ; clk_div:c1|counter[17] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.791      ;
; -1.731 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.758      ;
; -1.731 ; clk_div:c1|counter[20] ; clk_div:c1|clk_out     ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.776      ;
; -1.731 ; clk_div:c1|counter[11] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.758      ;
; -1.731 ; clk_div:c1|counter[11] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.758      ;
; -1.730 ; clk_div:c1|counter[20] ; clk_div:c1|counter[6]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 2.775      ;
; -1.727 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 2.754      ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'shiftReg:sB|ShiftedValues[4]'                                                                                                                     ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -0.805 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.324      ; 1.412      ;
; -0.686 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.324      ; 1.293      ;
; -0.533 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.324      ; 1.140      ;
; -0.485 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.153      ; 1.465      ;
; -0.440 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.413      ;
; -0.431 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.153      ; 1.411      ;
; -0.316 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.289      ;
; -0.316 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.289      ;
; -0.283 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.134      ; 1.410      ;
; -0.267 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.413      ;
; -0.245 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.131      ; 1.409      ;
; -0.228 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.133      ; 1.409      ;
; -0.165 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.134      ; 1.292      ;
; -0.161 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.134      ; 1.288      ;
; -0.154 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.153      ; 1.134      ;
; -0.140 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.286      ;
; -0.125 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.131      ; 1.289      ;
; -0.099 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.133      ; 1.280      ;
; 0.003  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.154      ; 1.143      ;
; 0.035  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.131      ; 1.129      ;
; 0.041  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.133      ; 1.140      ;
; 0.209  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.615      ; 2.439      ;
; 0.571  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.445      ; 2.443      ;
; 0.709  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.615      ; 2.439      ;
; 0.745  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.445      ; 2.442      ;
; 0.775  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.425      ; 2.393      ;
; 0.816  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.422      ; 2.389      ;
; 0.831  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.424      ; 2.391      ;
; 1.071  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.445      ; 2.443      ;
; 1.245  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.445      ; 2.442      ;
; 1.275  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.425      ; 2.393      ;
; 1.316  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.422      ; 2.389      ;
; 1.331  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.424      ; 2.391      ;
; 2.053  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 3.444      ; 0.968      ;
; 2.553  ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 3.444      ; 0.968      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'shiftReg:sB|ShiftedValues[0]'                                                                                                                     ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -0.722 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.790      ; 1.477      ;
; -0.567 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.793      ; 1.464      ;
; -0.546 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.790      ; 1.301      ;
; -0.396 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.790      ; 1.151      ;
; -0.387 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.793      ; 1.284      ;
; -0.253 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.793      ; 1.150      ;
; -0.174 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.475      ;
; -0.086 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.659      ; 1.583      ;
; -0.038 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.339      ;
; -0.019 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.320      ;
; 0.005  ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.473      ;
; 0.041  ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.659      ; 1.456      ;
; 0.181  ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.659      ; 1.316      ;
; 0.181  ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.297      ;
; 0.190  ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.660      ; 1.453      ;
; 0.247  ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.657      ; 1.468      ;
; 0.329  ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.660      ; 1.314      ;
; 0.331  ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.658      ; 1.147      ;
; 0.353  ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.660      ; 1.290      ;
; 0.425  ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.657      ; 1.290      ;
; 0.570  ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.657      ; 1.145      ;
; 0.722  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.873      ; 1.866      ;
; 0.874  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.876      ; 1.856      ;
; 1.222  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.873      ; 1.866      ;
; 1.253  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.741      ; 1.881      ;
; 1.374  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.876      ; 1.856      ;
; 1.449  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.741      ; 1.862      ;
; 1.623  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.743      ; 1.853      ;
; 1.694  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.740      ; 1.854      ;
; 1.753  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.741      ; 1.881      ;
; 1.949  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.741      ; 1.862      ;
; 2.123  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.743      ; 1.853      ;
; 2.194  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.740      ; 1.854      ;
; 2.361  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 3.742      ; 0.969      ;
; 2.861  ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 3.742      ; 0.969      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'shiftReg:sB|ShiftedValues[0]'                                                                                                                      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -3.023 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.742      ; 0.969      ;
; -2.523 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.742      ; 0.969      ;
; -2.270 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.876      ; 1.856      ;
; -2.257 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.873      ; 1.866      ;
; -2.140 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.743      ; 1.853      ;
; -2.136 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.740      ; 1.854      ;
; -2.129 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.741      ; 1.862      ;
; -2.110 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 3.741      ; 1.881      ;
; -1.770 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.876      ; 1.856      ;
; -1.757 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.873      ; 1.866      ;
; -1.640 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.743      ; 1.853      ;
; -1.636 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.740      ; 1.854      ;
; -1.629 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.741      ; 1.862      ;
; -1.610 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 3.741      ; 1.881      ;
; -0.643 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.793      ; 1.150      ;
; -0.639 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.790      ; 1.151      ;
; -0.512 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.657      ; 1.145      ;
; -0.511 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.147      ;
; -0.509 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.793      ; 1.284      ;
; -0.489 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.790      ; 1.301      ;
; -0.370 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.660      ; 1.290      ;
; -0.367 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.657      ; 1.290      ;
; -0.361 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.297      ;
; -0.346 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.660      ; 1.314      ;
; -0.343 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.659      ; 1.316      ;
; -0.338 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.320      ;
; -0.329 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.793      ; 1.464      ;
; -0.319 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.339      ;
; -0.313 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.790      ; 1.477      ;
; -0.207 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.660      ; 1.453      ;
; -0.203 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.659      ; 1.456      ;
; -0.189 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.657      ; 1.468      ;
; -0.185 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.473      ;
; -0.183 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.658      ; 1.475      ;
; -0.076 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.659      ; 1.583      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'shiftReg:sB|ShiftedValues[4]'                                                                                                                      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -2.726 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.444      ; 0.968      ;
; -2.226 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.444      ; 0.968      ;
; -1.426 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.615      ; 2.439      ;
; -1.283 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.424      ; 2.391      ;
; -1.283 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.422      ; 2.389      ;
; -1.282 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.425      ; 2.393      ;
; -1.253 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.445      ; 2.442      ;
; -1.252 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 3.445      ; 2.443      ;
; -0.926 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.615      ; 2.439      ;
; -0.783 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.424      ; 2.391      ;
; -0.783 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.422      ; 2.389      ;
; -0.782 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.425      ; 2.393      ;
; -0.753 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.445      ; 2.442      ;
; -0.752 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 3.445      ; 2.443      ;
; -0.184 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.324      ; 1.140      ;
; -0.031 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.324      ; 1.293      ;
; -0.019 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.153      ; 1.134      ;
; -0.011 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.143      ;
; -0.002 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.131      ; 1.129      ;
; 0.007  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.133      ; 1.140      ;
; 0.088  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.324      ; 1.412      ;
; 0.132  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.286      ;
; 0.135  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.289      ;
; 0.135  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.289      ;
; 0.147  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.133      ; 1.280      ;
; 0.154  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.134      ; 1.288      ;
; 0.158  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.131      ; 1.289      ;
; 0.158  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.134      ; 1.292      ;
; 0.258  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.153      ; 1.411      ;
; 0.259  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.413      ;
; 0.259  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.154      ; 1.413      ;
; 0.276  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.133      ; 1.409      ;
; 0.276  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.134      ; 1.410      ;
; 0.278  ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.131      ; 1.409      ;
; 0.312  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.153      ; 1.465      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                          ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                ; Launch Clock       ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+
; -2.526 ; clk_div:c1|clk_out     ; clk_div:c1|clk_out     ; clk_div:c1|clk_out ; CLOCK_50    ; 0.000        ; 2.667      ; 0.657      ;
; -2.026 ; clk_div:c1|clk_out     ; clk_div:c1|clk_out     ; clk_div:c1|clk_out ; CLOCK_50    ; -0.500       ; 2.667      ; 0.657      ;
; 0.795  ; clk_div:c1|counter[13] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.061      ;
; 0.801  ; clk_div:c1|counter[22] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.067      ;
; 0.806  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[1]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; clk_div:c1|counter[11] ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; clk_div:c1|counter[12] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; clk_div:c1|counter[20] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; clk_div:c1|counter[24] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; clk_div:c1|counter[10] ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.810  ; clk_div:c1|counter[17] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.076      ;
; 0.835  ; clk_div:c1|counter[16] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.101      ;
; 0.835  ; clk_div:c1|counter[18] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.101      ;
; 0.837  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.103      ;
; 0.838  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.839  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.105      ;
; 0.839  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.105      ;
; 0.841  ; clk_div:c1|counter[21] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.107      ;
; 0.842  ; clk_div:c1|counter[23] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.108      ;
; 0.846  ; clk_div:c1|counter[25] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.978  ; clk_div:c1|counter[19] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.244      ;
; 1.180  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[1]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.446      ;
; 1.184  ; clk_div:c1|counter[22] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.450      ;
; 1.187  ; clk_div:c1|counter[15] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.453      ;
; 1.189  ; clk_div:c1|counter[10] ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.455      ;
; 1.189  ; clk_div:c1|counter[11] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.455      ;
; 1.189  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.455      ;
; 1.189  ; clk_div:c1|counter[24] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.455      ;
; 1.192  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.458      ;
; 1.193  ; clk_div:c1|counter[17] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.459      ;
; 1.221  ; clk_div:c1|counter[16] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.487      ;
; 1.221  ; clk_div:c1|counter[18] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.487      ;
; 1.225  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.491      ;
; 1.227  ; clk_div:c1|counter[21] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.493      ;
; 1.228  ; clk_div:c1|counter[23] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.494      ;
; 1.251  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.517      ;
; 1.255  ; clk_div:c1|counter[22] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.521      ;
; 1.258  ; clk_div:c1|counter[15] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.524      ;
; 1.259  ; clk_div:c1|counter[14] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.525      ;
; 1.260  ; clk_div:c1|counter[10] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.526      ;
; 1.260  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.526      ;
; 1.263  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.529      ;
; 1.264  ; clk_div:c1|counter[17] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.530      ;
; 1.274  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.540      ;
; 1.281  ; clk_div:c1|counter[20] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.547      ;
; 1.290  ; clk_div:c1|counter[12] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 1.547      ;
; 1.292  ; clk_div:c1|counter[18] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.558      ;
; 1.292  ; clk_div:c1|counter[16] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.558      ;
; 1.294  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.560      ;
; 1.298  ; clk_div:c1|counter[21] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.564      ;
; 1.299  ; clk_div:c1|counter[23] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.565      ;
; 1.320  ; clk_div:c1|counter[13] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.586      ;
; 1.322  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.588      ;
; 1.326  ; clk_div:c1|counter[22] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.592      ;
; 1.329  ; clk_div:c1|counter[15] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.595      ;
; 1.330  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[4]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.596      ;
; 1.330  ; clk_div:c1|counter[14] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.596      ;
; 1.334  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.600      ;
; 1.335  ; clk_div:c1|counter[17] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.601      ;
; 1.341  ; clk_div:c1|counter[15] ; clk_div:c1|counter[15] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.607      ;
; 1.341  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[9]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.607      ;
; 1.344  ; clk_div:c1|counter[11] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 1.601      ;
; 1.352  ; clk_div:c1|counter[20] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.618      ;
; 1.361  ; clk_div:c1|counter[19] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.627      ;
; 1.363  ; clk_div:c1|counter[16] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.629      ;
; 1.366  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.632      ;
; 1.369  ; clk_div:c1|counter[21] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.635      ;
; 1.370  ; clk_div:c1|counter[6]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.636      ;
; 1.384  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.650      ;
; 1.391  ; clk_div:c1|counter[13] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.657      ;
; 1.400  ; clk_div:c1|counter[15] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.666      ;
; 1.401  ; clk_div:c1|counter[14] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.667      ;
; 1.406  ; clk_div:c1|counter[8]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.672      ;
; 1.415  ; clk_div:c1|counter[10] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 1.672      ;
; 1.416  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.682      ;
; 1.423  ; clk_div:c1|counter[20] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.689      ;
; 1.434  ; clk_div:c1|counter[16] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.700      ;
; 1.437  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.703      ;
; 1.440  ; clk_div:c1|counter[21] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.706      ;
; 1.451  ; clk_div:c1|counter[18] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.717      ;
; 1.455  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.721      ;
; 1.462  ; clk_div:c1|counter[13] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.728      ;
; 1.471  ; clk_div:c1|counter[15] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.737      ;
; 1.472  ; clk_div:c1|counter[14] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.738      ;
; 1.477  ; clk_div:c1|counter[8]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.743      ;
; 1.489  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 1.746      ;
; 1.490  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.756      ;
; 1.494  ; clk_div:c1|counter[20] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.760      ;
; 1.494  ; clk_div:c1|counter[17] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.760      ;
; 1.502  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[0]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.768      ;
; 1.503  ; clk_div:c1|counter[12] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 1.760      ;
; 1.507  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.773      ;
; 1.508  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.774      ;
; 1.514  ; clk_div:c1|counter[14] ; clk_div:c1|counter[14] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.780      ;
; 1.520  ; clk_div:c1|counter[19] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.786      ;
; 1.522  ; clk_div:c1|counter[10] ; clk_div:c1|clk_out     ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.788      ;
; 1.522  ; clk_div:c1|counter[18] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.788      ;
; 1.523  ; clk_div:c1|counter[10] ; clk_div:c1|counter[6]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.789      ;
; 1.526  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.792      ;
; 1.533  ; clk_div:c1|counter[13] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 1.799      ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_div:c1|clk_out'                                                                                                                                            ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                              ; Launch Clock                 ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+
; -2.521 ; shiftReg:sB|ShiftedValues[0]        ; shiftReg:sB|ShiftedValues[4]         ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; 0.000        ; 3.379      ; 1.374      ;
; -2.021 ; shiftReg:sB|ShiftedValues[0]        ; shiftReg:sB|ShiftedValues[4]         ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; -0.500       ; 3.379      ; 1.374      ;
; 0.391  ; colFunction:c60|count[0]            ; colFunction:c60|count[0]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; colFunction:c60|count[1]            ; colFunction:c60|count[1]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; keypad:k1|value[0]                  ; keypad:k1|value[0]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; keypad:k1|value[2]                  ; keypad:k1|value[2]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; keypad:k1|value[3]                  ; keypad:k1|value[3]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; keypad:k1|value[1]                  ; keypad:k1|value[1]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.657      ;
; 0.515  ; keypad:k1|In[1]                     ; keypad:k1|shiftRegDebounce:s1|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.781      ;
; 0.519  ; keypad:k1|shiftRegDebounce:s0|Q[3]  ; keypad:k1|shiftRegDebounce:s0|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.785      ;
; 0.521  ; keypad:k1|shiftRegDebounce:s2|Q[1]  ; keypad:k1|shiftRegDebounce:s2|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.787      ;
; 0.522  ; keypad:k1|shiftRegDebounce:s7|Q[3]  ; keypad:k1|shiftRegDebounce:s7|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.788      ;
; 0.522  ; keypad:k1|shiftRegDebounce:s9|Q[2]  ; keypad:k1|shiftRegDebounce:s9|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.788      ;
; 0.523  ; keypad:k1|shiftRegDebounce:s6|Q[3]  ; keypad:k1|shiftRegDebounce:s6|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.789      ;
; 0.523  ; keypad:k1|shiftRegDebounce:s4|Q[2]  ; keypad:k1|shiftRegDebounce:s4|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.789      ;
; 0.523  ; keypad:k1|shiftRegDebounce:s2|Q[3]  ; keypad:k1|shiftRegDebounce:s2|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.789      ;
; 0.523  ; keypad:k1|shiftRegDebounce:s15|Q[2] ; keypad:k1|shiftRegDebounce:s15|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.789      ;
; 0.523  ; keypad:k1|In[10]                    ; keypad:k1|shiftRegDebounce:s10|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.789      ;
; 0.524  ; keypad:k1|shiftRegDebounce:s2|Q[1]  ; keypad:k1|shiftRegDebounce:s2|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.790      ;
; 0.525  ; keypad:k1|shiftRegDebounce:s5|Q[3]  ; keypad:k1|shiftRegDebounce:s5|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.791      ;
; 0.525  ; keypad:k1|shiftRegDebounce:s8|Q[2]  ; keypad:k1|shiftRegDebounce:s8|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.791      ;
; 0.525  ; keypad:k1|shiftRegDebounce:s12|Q[3] ; keypad:k1|shiftRegDebounce:s12|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.791      ;
; 0.525  ; keypad:k1|shiftRegDebounce:s11|Q[3] ; keypad:k1|shiftRegDebounce:s11|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.791      ;
; 0.526  ; keypad:k1|shiftRegDebounce:s14|Q[2] ; keypad:k1|shiftRegDebounce:s14|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.792      ;
; 0.527  ; keypad:k1|In[8]                     ; keypad:k1|shiftRegDebounce:s8|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.793      ;
; 0.527  ; keypad:k1|shiftRegDebounce:s10|Q[3] ; keypad:k1|shiftRegDebounce:s10|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.793      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s5|Q[1]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s4|Q[3]  ; keypad:k1|shiftRegDebounce:s4|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s8|Q[3]  ; keypad:k1|shiftRegDebounce:s8|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s10|Q[2] ; keypad:k1|shiftRegDebounce:s10|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s9|Q[3]  ; keypad:k1|shiftRegDebounce:s9|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.529  ; keypad:k1|shiftRegDebounce:s11|Q[2] ; keypad:k1|shiftRegDebounce:s11|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.795      ;
; 0.530  ; keypad:k1|shiftRegDebounce:s6|Q[2]  ; keypad:k1|shiftRegDebounce:s6|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.796      ;
; 0.531  ; keypad:k1|shiftRegDebounce:s0|Q[1]  ; keypad:k1|shiftRegDebounce:s0|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.797      ;
; 0.531  ; keypad:k1|shiftRegDebounce:s5|Q[1]  ; keypad:k1|shiftRegDebounce:s5|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.797      ;
; 0.531  ; keypad:k1|shiftRegDebounce:s7|Q[1]  ; keypad:k1|shiftRegDebounce:s7|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.797      ;
; 0.531  ; keypad:k1|shiftRegDebounce:s10|Q[1] ; keypad:k1|shiftRegDebounce:s10|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.797      ;
; 0.531  ; keypad:k1|shiftRegDebounce:s11|Q[1] ; keypad:k1|shiftRegDebounce:s11|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.797      ;
; 0.532  ; keypad:k1|shiftRegDebounce:s4|Q[1]  ; keypad:k1|shiftRegDebounce:s4|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.798      ;
; 0.532  ; keypad:k1|shiftRegDebounce:s14|Q[3] ; keypad:k1|shiftRegDebounce:s14|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.798      ;
; 0.532  ; keypad:k1|shiftRegDebounce:s13|Q[1] ; keypad:k1|shiftRegDebounce:s13|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.798      ;
; 0.533  ; keypad:k1|shiftRegDebounce:s3|Q[2]  ; keypad:k1|shiftRegDebounce:s3|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.799      ;
; 0.533  ; keypad:k1|shiftRegDebounce:s3|Q[1]  ; keypad:k1|shiftRegDebounce:s3|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.799      ;
; 0.533  ; keypad:k1|shiftRegDebounce:s1|Q[1]  ; keypad:k1|shiftRegDebounce:s1|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.799      ;
; 0.535  ; keypad:k1|In[3]                     ; keypad:k1|shiftRegDebounce:s3|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.801      ;
; 0.535  ; keypad:k1|shiftRegDebounce:s1|Q[2]  ; keypad:k1|shiftRegDebounce:s1|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.801      ;
; 0.536  ; keypad:k1|shiftRegDebounce:s13|Q[3] ; keypad:k1|shiftRegDebounce:s13|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.802      ;
; 0.538  ; keypad:k1|shiftRegDebounce:s15|Q[1] ; keypad:k1|shiftRegDebounce:s15|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.804      ;
; 0.539  ; keypad:k1|shiftRegDebounce:s15|Q[1] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.539  ; keypad:k1|shiftRegDebounce:s13|Q[2] ; keypad:k1|shiftRegDebounce:s13|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.541  ; keypad:k1|shiftRegDebounce:s13|Q[3] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.807      ;
; 0.652  ; keypad:k1|shiftRegDebounce:s0|Q[0]  ; keypad:k1|shiftRegDebounce:s0|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.918      ;
; 0.652  ; keypad:k1|shiftRegDebounce:s1|Q[0]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.918      ;
; 0.655  ; keypad:k1|shiftRegDebounce:s3|Q[0]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.921      ;
; 0.655  ; keypad:k1|shiftRegDebounce:s15|Q[0] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.921      ;
; 0.664  ; keypad:k1|shiftRegDebounce:s9|Q[1]  ; keypad:k1|shiftRegDebounce:s9|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.930      ;
; 0.664  ; keypad:k1|shiftRegDebounce:s5|Q[0]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.930      ;
; 0.665  ; keypad:k1|shiftRegDebounce:s13|Q[0] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.931      ;
; 0.666  ; keypad:k1|shiftRegDebounce:s14|Q[1] ; keypad:k1|shiftRegDebounce:s14|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.932      ;
; 0.669  ; keypad:k1|In[15]                    ; keypad:k1|shiftRegDebounce:s15|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; -0.001     ; 0.934      ;
; 0.673  ; keypad:k1|shiftRegDebounce:s5|Q[2]  ; keypad:k1|shiftRegDebounce:s5|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.939      ;
; 0.674  ; keypad:k1|shiftRegDebounce:s7|Q[2]  ; keypad:k1|shiftRegDebounce:s7|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.940      ;
; 0.674  ; keypad:k1|shiftRegDebounce:s12|Q[2] ; keypad:k1|shiftRegDebounce:s12|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.940      ;
; 0.674  ; keypad:k1|shiftRegDebounce:s12|Q[1] ; keypad:k1|shiftRegDebounce:s12|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.940      ;
; 0.699  ; keypad:k1|In[0]                     ; keypad:k1|shiftRegDebounce:s0|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.001      ; 0.966      ;
; 0.699  ; keypad:k1|In[7]                     ; keypad:k1|shiftRegDebounce:s7|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; -0.001     ; 0.964      ;
; 0.700  ; keypad:k1|In[12]                    ; keypad:k1|shiftRegDebounce:s12|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; -0.001     ; 0.965      ;
; 0.706  ; keypad:k1|In[9]                     ; keypad:k1|shiftRegDebounce:s9|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.972      ;
; 0.707  ; keypad:k1|In[11]                    ; keypad:k1|shiftRegDebounce:s11|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.973      ;
; 0.730  ; shiftReg:sB|ShiftedValues[1]        ; shiftReg:sB|ShiftedValues[5]         ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.208      ; 1.204      ;
; 0.752  ; key_press1                          ; Enable[1]                            ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.018      ;
; 0.771  ; keypad:k1|shiftRegDebounce:s15|Q[2] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.037      ;
; 0.779  ; keypad:k1|shiftRegDebounce:s3|Q[2]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.045      ;
; 0.782  ; keypad:k1|shiftRegDebounce:s5|Q[2]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.048      ;
; 0.782  ; keypad:k1|shiftRegDebounce:s1|Q[1]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.048      ;
; 0.789  ; keypad:k1|shiftRegDebounce:s13|Q[2] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.055      ;
; 0.802  ; keypad:k1|shiftRegDebounce:s2|Q[0]  ; keypad:k1|shiftRegDebounce:s2|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.068      ;
; 0.805  ; colFunction:c60|count[0]            ; keypad:k1|In[8]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.071      ;
; 0.809  ; keypad:k1|shiftRegDebounce:s5|Q[3]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.075      ;
; 0.810  ; keypad:k1|shiftRegDebounce:s13|Q[1] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.076      ;
; 0.812  ; keypad:k1|shiftRegDebounce:s0|Q[1]  ; keypad:k1|shiftRegDebounce:s0|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.078      ;
; 0.815  ; keypad:k1|shiftRegDebounce:s1|Q[2]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.081      ;
; 0.818  ; keypad:k1|shiftRegDebounce:s3|Q[1]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.084      ;
; 0.840  ; colFunction:c60|count[1]            ; keypad:k1|In[4]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.106      ;
; 0.845  ; colFunction:c60|count[0]            ; keypad:k1|In[12]                     ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.111      ;
; 0.846  ; keypad:k1|shiftRegDebounce:s8|Q[1]  ; keypad:k1|shiftRegDebounce:s8|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.112      ;
; 0.846  ; colFunction:c60|count[0]            ; colFunction:c60|count[1]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.112      ;
; 0.847  ; keypad:k1|shiftRegDebounce:s6|Q[1]  ; keypad:k1|shiftRegDebounce:s6|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.113      ;
; 0.847  ; colFunction:c60|count[0]            ; keypad:k1|In[4]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.113      ;
; 0.872  ; colFunction:c60|count[1]            ; keypad:k1|In[12]                     ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.138      ;
; 0.874  ; colFunction:c60|count[1]            ; keypad:k1|In[8]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.140      ;
; 0.931  ; keypad:k1|shiftRegDebounce:s4|Q[0]  ; keypad:k1|shiftRegDebounce:s4|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.002      ; 1.199      ;
; 0.934  ; keypad:k1|enableShift[2]            ; keypad:k1|shiftRegDebounce:s8|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.200      ;
; 0.934  ; keypad:k1|enableShift[2]            ; keypad:k1|shiftRegDebounce:s8|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.200      ;
; 0.934  ; keypad:k1|enableShift[2]            ; keypad:k1|shiftRegDebounce:s8|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.200      ;
; 0.934  ; keypad:k1|enableShift[2]            ; keypad:k1|shiftRegDebounce:s8|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.200      ;
; 0.939  ; keypad:k1|shiftRegDebounce:s6|Q[2]  ; keypad:k1|shiftRegDebounce:s6|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.002      ; 1.207      ;
; 0.947  ; keypad:k1|shiftRegDebounce:s2|Q[2]  ; keypad:k1|shiftRegDebounce:s2|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.001      ; 1.214      ;
; 0.950  ; keypad:k1|enableShift[0]            ; keypad:k1|shiftRegDebounce:s3|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.216      ;
; 0.950  ; keypad:k1|enableShift[0]            ; keypad:k1|shiftRegDebounce:s3|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 1.216      ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[10]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[10]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[11]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[11]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[12]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[12]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[13]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[13]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[14]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[14]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[15]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[15]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[16]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[16]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[17]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[17]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[18]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[18]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[19]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[19]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[20]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[20]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[21]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[21]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[22]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[22]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[23]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[23]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[24]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[24]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[25]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[25]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|clk_out|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|clk_out|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[10]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[10]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[11]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[11]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[12]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[12]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[13]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[13]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[14]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[14]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[15]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[15]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[16]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[16]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[17]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[17]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[18]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[18]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[19]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[19]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[20]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[20]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[21]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[21]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[22]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[22]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[23]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[23]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[24]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[24]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[25]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[25]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[2]|clk         ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_div:c1|clk_out'                                                                               ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock              ; Clock Edge ; Target                               ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Enable[1]                            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Enable[1]                            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[0]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[0]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[1]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[1]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[2]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[2]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Sign[0]                              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Sign[0]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Sign[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Sign[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; key_press1                           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; key_press1                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[10]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[10]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[11]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[11]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[12]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[12]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[13]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[13]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[14]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[14]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[15]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[15]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[6]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[6]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[7]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[7]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[8]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[8]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[9]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[9]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[2]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[2]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[3]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[3]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|key_press                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|key_press                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Equal  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Equal  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Equal ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Equal ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s12|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s12|Equal ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[0]'                                                                    ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                        ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[1]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[1]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[2]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[2]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[6]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[6]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; sB|ShiftedValues[0]|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; sB|ShiftedValues[0]|regout ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[4]'                                                                    ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                        ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[1]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[1]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[2]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[2]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[6]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[6]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; sB|ShiftedValues[4]|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; sB|ShiftedValues[4]|regout ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+


+------------------------------------------------------------------------------------+
; Setup Times                                                                        ;
+-------------+--------------------+-------+-------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise  ; Fall  ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+-------+-------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; 4.162 ; 4.162 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; 4.146 ; 4.146 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; 3.772 ; 3.772 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; 3.984 ; 3.984 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; 4.162 ; 4.162 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; 2.943 ; 2.943 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; 2.706 ; 2.706 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; 2.943 ; 2.943 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+-------+-------+------------+--------------------+


+--------------------------------------------------------------------------------------+
; Hold Times                                                                           ;
+-------------+--------------------+--------+--------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise   ; Fall   ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+--------+--------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; -2.851 ; -2.851 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; -3.225 ; -3.225 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; -2.851 ; -2.851 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; -3.063 ; -3.063 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; -3.241 ; -3.241 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; -2.476 ; -2.476 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; -2.476 ; -2.476 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; -2.713 ; -2.713 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+--------+--------+------------+--------------------+


+--------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                  ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 7.163 ; 7.163 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 6.942 ; 6.942 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 7.163 ; 7.163 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 6.709 ; 6.709 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 7.008 ; 7.008 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 9.496 ; 9.496 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 9.342 ; 9.342 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 9.124 ; 9.124 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 9.496 ; 9.496 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 9.233 ; 9.233 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 8.731 ; 8.731 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 5.986 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 8.827 ; 8.827 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 7.289 ; 7.289 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 7.062 ; 7.062 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 7.061 ; 7.061 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 8.827 ; 8.827 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 8.377 ; 8.377 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.499 ; 7.499 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.472 ; 7.472 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.499 ; 7.499 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.441 ; 7.441 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.049 ; 7.049 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.356 ; 7.356 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.338 ; 7.338 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.194 ; 7.194 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.847 ; 7.847 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.487 ; 7.487 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.847 ; 7.847 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.426 ; 7.426 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.611 ; 7.611 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.603 ; 7.603 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.567 ; 7.567 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.695 ; 7.695 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 7.104 ; 7.104 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 6.725 ; 6.725 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 6.714 ; 6.714 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.104 ; 7.104 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.012 ; 7.012 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 6.825 ; 6.825 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 6.816 ; 6.816 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 6.829 ; 6.829 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 7.916 ; 7.916 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 7.551 ; 7.551 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 7.561 ; 7.561 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.916 ; 7.916 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.509 ; 7.509 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 7.354 ; 7.354 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 7.388 ; 7.388 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 7.359 ; 7.359 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                          ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 6.709 ; 6.709 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 6.942 ; 6.942 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 7.163 ; 7.163 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 6.709 ; 6.709 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 7.008 ; 7.008 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 5.986 ; 8.731 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 9.342 ; 9.342 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 9.124 ; 9.124 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 9.496 ; 9.496 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 9.233 ; 9.233 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 8.731 ; 8.731 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 5.986 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 7.061 ; 7.061 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 7.289 ; 7.289 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 7.062 ; 7.062 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 7.061 ; 7.061 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 8.827 ; 8.827 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 8.377 ; 8.377 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.049 ; 7.049 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.472 ; 7.472 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.499 ; 7.499 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.441 ; 7.441 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.049 ; 7.049 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.356 ; 7.356 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.338 ; 7.338 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.194 ; 7.194 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.426 ; 7.426 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.487 ; 7.487 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.847 ; 7.847 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.426 ; 7.426 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.611 ; 7.611 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.603 ; 7.603 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.567 ; 7.567 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.695 ; 7.695 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 6.714 ; 6.714 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 6.725 ; 6.725 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 6.714 ; 6.714 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.104 ; 7.104 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.012 ; 7.012 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 6.825 ; 6.825 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 6.816 ; 6.816 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 6.829 ; 6.829 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 7.354 ; 7.354 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 7.551 ; 7.551 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 7.561 ; 7.561 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.916 ; 7.916 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.509 ; 7.509 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 7.354 ; 7.354 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 7.388 ; 7.388 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 7.359 ; 7.359 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+-------------------------------------------------------+
; Fast Model Setup Summary                              ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; clk_div:c1|clk_out           ; -1.527 ; -16.030       ;
; CLOCK_50                     ; -0.633 ; -7.515        ;
; shiftReg:sB|ShiftedValues[0] ; 0.364  ; 0.000         ;
; shiftReg:sB|ShiftedValues[4] ; 0.364  ; 0.000         ;
+------------------------------+--------+---------------+


+-------------------------------------------------------+
; Fast Model Hold Summary                               ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; shiftReg:sB|ShiftedValues[0] ; -1.637 ; -9.352        ;
; CLOCK_50                     ; -1.570 ; -1.570        ;
; clk_div:c1|clk_out           ; -1.558 ; -1.558        ;
; shiftReg:sB|ShiftedValues[4] ; -1.501 ; -6.875        ;
+------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                ;
+------------------------------+--------+---------------+
; Clock                        ; Slack  ; End Point TNS ;
+------------------------------+--------+---------------+
; CLOCK_50                     ; -1.380 ; -28.380       ;
; clk_div:c1|clk_out           ; -0.500 ; -126.000      ;
; shiftReg:sB|ShiftedValues[0] ; 0.500  ; 0.000         ;
; shiftReg:sB|ShiftedValues[4] ; 0.500  ; 0.000         ;
+------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_div:c1|clk_out'                                                                                                                          ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+
; Slack  ; From Node                            ; To Node                      ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+
; -1.527 ; keypad:k1|value[2]                   ; shiftReg:sB|ShiftedValues[2] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.840     ; 1.719      ;
; -1.492 ; keypad:k1|value[3]                   ; shiftReg:sB|ShiftedValues[3] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.840     ; 1.684      ;
; -1.472 ; keypad:k1|value[1]                   ; shiftReg:sB|ShiftedValues[1] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.840     ; 1.664      ;
; -1.136 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 2.167      ;
; -1.134 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 2.165      ;
; -1.133 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 2.164      ;
; -1.129 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 2.160      ;
; -1.104 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 2.136      ;
; -1.102 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 2.134      ;
; -1.101 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 2.133      ;
; -1.097 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 2.129      ;
; -1.046 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 2.079      ;
; -1.044 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 2.077      ;
; -1.043 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 2.076      ;
; -1.039 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 2.072      ;
; -0.955 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.987      ;
; -0.953 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.985      ;
; -0.951 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.983      ;
; -0.950 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.982      ;
; -0.948 ; keypad:k1|shiftRegDebounce:s15|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.979      ;
; -0.942 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.974      ;
; -0.940 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.972      ;
; -0.939 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.971      ;
; -0.937 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.969      ;
; -0.935 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.967      ;
; -0.935 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.967      ;
; -0.934 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.966      ;
; -0.930 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 1.964      ;
; -0.930 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.962      ;
; -0.928 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 1.962      ;
; -0.927 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 1.961      ;
; -0.923 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 1.957      ;
; -0.918 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.949      ;
; -0.916 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.947      ;
; -0.916 ; keypad:k1|shiftRegDebounce:s8|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.948      ;
; -0.914 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.945      ;
; -0.913 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.944      ;
; -0.902 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.935      ;
; -0.900 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.933      ;
; -0.899 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.932      ;
; -0.899 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.932      ;
; -0.898 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.929      ;
; -0.897 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.930      ;
; -0.896 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.929      ;
; -0.896 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.927      ;
; -0.895 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.926      ;
; -0.895 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.928      ;
; -0.895 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.928      ;
; -0.893 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.926      ;
; -0.892 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.925      ;
; -0.892 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.925      ;
; -0.891 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.922      ;
; -0.889 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.922      ;
; -0.889 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.921      ;
; -0.888 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.921      ;
; -0.887 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.920      ;
; -0.887 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.919      ;
; -0.885 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.918      ;
; -0.885 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.917      ;
; -0.884 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.917      ;
; -0.884 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.916      ;
; -0.872 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.905      ;
; -0.870 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.903      ;
; -0.869 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.902      ;
; -0.865 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.898      ;
; -0.858 ; keypad:k1|shiftRegDebounce:s1|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.891      ;
; -0.781 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[0]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.813      ;
; -0.779 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[1]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.811      ;
; -0.778 ; keypad:k1|value[0]                   ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.015      ; 1.825      ;
; -0.778 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[2]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.810      ;
; -0.774 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|value[3]           ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.806      ;
; -0.765 ; keypad:k1|shiftRegDebounce:s14|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.797      ;
; -0.754 ; keypad:k1|shiftRegDebounce:s11|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.786      ;
; -0.749 ; keypad:k1|shiftRegDebounce:s9|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.781      ;
; -0.742 ; keypad:k1|shiftRegDebounce:s5|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.002      ; 1.776      ;
; -0.728 ; keypad:k1|shiftRegDebounce:s0|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.759      ;
; -0.714 ; keypad:k1|shiftRegDebounce:s3|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.747      ;
; -0.711 ; keypad:k1|shiftRegDebounce:s2|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.744      ;
; -0.710 ; keypad:k1|shiftRegDebounce:s13|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.001     ; 1.741      ;
; -0.707 ; keypad:k1|shiftRegDebounce:s4|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.740      ;
; -0.704 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[7] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.773     ; 0.963      ;
; -0.704 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[6] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.773     ; 0.963      ;
; -0.704 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[5] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.773     ; 0.963      ;
; -0.699 ; keypad:k1|shiftRegDebounce:s7|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.732      ;
; -0.699 ; keypad:k1|shiftRegDebounce:s10|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.731      ;
; -0.684 ; keypad:k1|shiftRegDebounce:s6|Equal  ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.001      ; 1.717      ;
; -0.679 ; keypad:k1|key_press                  ; key_press1                   ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.020      ; 1.731      ;
; -0.675 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[3] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.860     ; 0.847      ;
; -0.675 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[2] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.860     ; 0.847      ;
; -0.675 ; Enable[1]                            ; shiftReg:sB|ShiftedValues[1] ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; -0.860     ; 0.847      ;
; -0.671 ; keypad:k1|key_press                  ; Enable[1]                    ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.020      ; 1.723      ;
; -0.618 ; keypad:k1|value[3]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.671      ;
; -0.616 ; keypad:k1|value[3]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.669      ;
; -0.593 ; keypad:k1|shiftRegDebounce:s12|Equal ; keypad:k1|key_press          ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.000      ; 1.625      ;
; -0.546 ; keypad:k1|value[2]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.599      ;
; -0.545 ; keypad:k1|value[2]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.598      ;
; -0.520 ; keypad:k1|value[2]                   ; Operator[2]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.573      ;
; -0.509 ; keypad:k1|value[0]                   ; Operator[0]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.562      ;
; -0.506 ; keypad:k1|value[3]                   ; Operator[2]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.559      ;
; -0.463 ; keypad:k1|value[1]                   ; Operator[1]                  ; clk_div:c1|clk_out ; clk_div:c1|clk_out ; 1.000        ; 0.021      ; 1.516      ;
+--------+--------------------------------------+------------------------------+--------------------+--------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                   ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.633 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.656      ;
; -0.602 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.625      ;
; -0.598 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.621      ;
; -0.581 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.604      ;
; -0.567 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.590      ;
; -0.563 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.586      ;
; -0.546 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.569      ;
; -0.546 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.569      ;
; -0.532 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.555      ;
; -0.528 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.551      ;
; -0.511 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.534      ;
; -0.511 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.534      ;
; -0.510 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.533      ;
; -0.497 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.520      ;
; -0.493 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.516      ;
; -0.490 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.513      ;
; -0.479 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.502      ;
; -0.476 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.499      ;
; -0.476 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.499      ;
; -0.472 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.495      ;
; -0.471 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.494      ;
; -0.470 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.493      ;
; -0.462 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.485      ;
; -0.458 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.481      ;
; -0.455 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.478      ;
; -0.451 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.473      ;
; -0.449 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.472      ;
; -0.441 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.464      ;
; -0.441 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.464      ;
; -0.439 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.462      ;
; -0.431 ; clk_div:c1|counter[14] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.463      ;
; -0.430 ; clk_div:c1|counter[14] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.462      ;
; -0.423 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.446      ;
; -0.420 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.443      ;
; -0.416 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.439      ;
; -0.416 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.438      ;
; -0.406 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.429      ;
; -0.399 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.422      ;
; -0.398 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.421      ;
; -0.397 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.420      ;
; -0.395 ; clk_div:c1|counter[13] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.427      ;
; -0.394 ; clk_div:c1|counter[13] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.426      ;
; -0.385 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.408      ;
; -0.383 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.406      ;
; -0.382 ; clk_div:c1|counter[15] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.414      ;
; -0.381 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.404      ;
; -0.381 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.403      ;
; -0.381 ; clk_div:c1|counter[15] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.413      ;
; -0.374 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.396      ;
; -0.368 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.391      ;
; -0.367 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.390      ;
; -0.364 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.387      ;
; -0.350 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.373      ;
; -0.349 ; clk_div:c1|counter[23] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.381      ;
; -0.349 ; clk_div:c1|counter[23] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.381      ;
; -0.347 ; clk_div:c1|counter[23] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.388      ;
; -0.347 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.370      ;
; -0.346 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.369      ;
; -0.346 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.369      ;
; -0.346 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.368      ;
; -0.344 ; clk_div:c1|counter[4]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.367      ;
; -0.343 ; clk_div:c1|counter[23] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.384      ;
; -0.343 ; clk_div:c1|counter[23] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.384      ;
; -0.339 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.361      ;
; -0.333 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.356      ;
; -0.332 ; clk_div:c1|counter[20] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.364      ;
; -0.332 ; clk_div:c1|counter[20] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.364      ;
; -0.330 ; clk_div:c1|counter[20] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.371      ;
; -0.329 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.352      ;
; -0.328 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.350      ;
; -0.326 ; clk_div:c1|counter[20] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.367      ;
; -0.326 ; clk_div:c1|counter[20] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.367      ;
; -0.314 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.336      ;
; -0.312 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.335      ;
; -0.312 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.335      ;
; -0.311 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.334      ;
; -0.311 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.334      ;
; -0.311 ; clk_div:c1|counter[6]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.333      ;
; -0.304 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.326      ;
; -0.301 ; clk_div:c1|counter[12] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.324      ;
; -0.300 ; clk_div:c1|counter[12] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.323      ;
; -0.298 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.321      ;
; -0.294 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.317      ;
; -0.277 ; clk_div:c1|counter[3]  ; clk_div:c1|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.300      ;
; -0.277 ; clk_div:c1|counter[2]  ; clk_div:c1|counter[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.300      ;
; -0.276 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.299      ;
; -0.276 ; clk_div:c1|counter[5]  ; clk_div:c1|counter[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.299      ;
; -0.270 ; clk_div:c1|counter[7]  ; clk_div:c1|counter[8]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.303      ;
; -0.269 ; clk_div:c1|counter[8]  ; clk_div:c1|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.010     ; 1.291      ;
; -0.268 ; clk_div:c1|counter[23] ; clk_div:c1|clk_out     ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.010      ; 1.310      ;
; -0.267 ; clk_div:c1|counter[23] ; clk_div:c1|counter[6]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.010      ; 1.309      ;
; -0.267 ; clk_div:c1|counter[9]  ; clk_div:c1|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.290      ;
; -0.267 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[6]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.300      ;
; -0.266 ; clk_div:c1|counter[21] ; clk_div:c1|counter[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.298      ;
; -0.266 ; clk_div:c1|counter[21] ; clk_div:c1|counter[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.298      ;
; -0.264 ; clk_div:c1|counter[21] ; clk_div:c1|counter[0]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.305      ;
; -0.263 ; clk_div:c1|counter[1]  ; clk_div:c1|counter[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.286      ;
; -0.260 ; clk_div:c1|counter[21] ; clk_div:c1|counter[4]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.301      ;
; -0.260 ; clk_div:c1|counter[21] ; clk_div:c1|counter[9]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.009      ; 1.301      ;
; -0.259 ; clk_div:c1|counter[0]  ; clk_div:c1|counter[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.282      ;
+--------+------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'shiftReg:sB|ShiftedValues[0]'                                                                                                                    ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; 0.364 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.945      ; 0.686      ;
; 0.443 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.945      ; 0.607      ;
; 0.446 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.940      ; 0.675      ;
; 0.507 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.945      ; 0.543      ;
; 0.529 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.940      ; 0.592      ;
; 0.578 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.940      ; 0.543      ;
; 0.635 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.887      ; 0.681      ;
; 0.660 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.888      ; 0.747      ;
; 0.686 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.887      ; 0.630      ;
; 0.701 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.887      ; 0.615      ;
; 0.712 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.886      ; 0.683      ;
; 0.735 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.888      ; 0.672      ;
; 0.791 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.886      ; 0.604      ;
; 0.794 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.888      ; 0.613      ;
; 0.800 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.889      ; 0.669      ;
; 0.820 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.885      ; 0.678      ;
; 0.855 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.886      ; 0.540      ;
; 0.856 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.889      ; 0.613      ;
; 0.873 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.889      ; 0.596      ;
; 0.896 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.885      ; 0.602      ;
; 0.928 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 2.043      ; 0.861      ;
; 0.959 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 0.885      ; 0.539      ;
; 1.007 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 2.038      ; 0.853      ;
; 1.185 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 1.985      ; 0.870      ;
; 1.275 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 1.984      ; 0.859      ;
; 1.354 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 1.987      ; 0.854      ;
; 1.383 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 1.983      ; 0.854      ;
; 1.428 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 2.043      ; 0.861      ;
; 1.507 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 2.038      ; 0.853      ;
; 1.656 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.500        ; 1.986      ; 0.490      ;
; 1.685 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.985      ; 0.870      ;
; 1.775 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.984      ; 0.859      ;
; 1.854 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.987      ; 0.854      ;
; 1.883 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.983      ; 0.854      ;
; 2.156 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 1.000        ; 1.986      ; 0.490      ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'shiftReg:sB|ShiftedValues[4]'                                                                                                                    ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; 0.364 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.744      ; 0.653      ;
; 0.411 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.744      ; 0.606      ;
; 0.477 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.744      ; 0.540      ;
; 0.498 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.664      ; 0.680      ;
; 0.515 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.659      ;
; 0.528 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.664      ; 0.650      ;
; 0.564 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.610      ;
; 0.575 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.599      ;
; 0.583 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.659      ;
; 0.596 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.653      ;
; 0.599 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.650      ;
; 0.613 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.655      ; 0.650      ;
; 0.632 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.610      ;
; 0.640 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.602      ;
; 0.643 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.664      ; 0.535      ;
; 0.649 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.600      ;
; 0.652 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.597      ;
; 0.671 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.655      ; 0.592      ;
; 0.706 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.665      ; 0.543      ;
; 0.718 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.656      ; 0.531      ;
; 0.718 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.929      ; 1.125      ;
; 0.723 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 0.655      ; 0.540      ;
; 0.874 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.850      ; 1.126      ;
; 0.948 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.850      ; 1.127      ;
; 0.984 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.841      ; 1.084      ;
; 0.995 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.841      ; 1.080      ;
; 1.008 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.840      ; 1.081      ;
; 1.218 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.929      ; 1.125      ;
; 1.374 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.850      ; 1.126      ;
; 1.448 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.850      ; 1.127      ;
; 1.484 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.841      ; 1.084      ;
; 1.495 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.841      ; 1.080      ;
; 1.508 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.840      ; 1.081      ;
; 1.515 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.500        ; 1.849      ; 0.489      ;
; 2.015 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 1.000        ; 1.849      ; 0.489      ;
+-------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'shiftReg:sB|ShiftedValues[0]'                                                                                                                      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -1.637 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.986      ; 0.490      ;
; -1.326 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 2.038      ; 0.853      ;
; -1.323 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 2.043      ; 0.861      ;
; -1.274 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.987      ; 0.854      ;
; -1.270 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.983      ; 0.854      ;
; -1.266 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.984      ; 0.859      ;
; -1.256 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 1.985      ; 0.870      ;
; -1.137 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[0] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 1.986      ; 0.490      ;
; -0.826 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[1] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 2.038      ; 0.853      ;
; -0.823 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[6] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 2.043      ; 0.861      ;
; -0.774 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[3] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 1.987      ; 0.854      ;
; -0.770 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[2] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 1.983      ; 0.854      ;
; -0.766 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[5] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 1.984      ; 0.859      ;
; -0.756 ; shiftReg:sB|ShiftedValues[0] ; hexEncoder:hB1|HEX[4] ; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; -0.500       ; 1.985      ; 0.870      ;
; -0.402 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.945      ; 0.543      ;
; -0.397 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.940      ; 0.543      ;
; -0.348 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.940      ; 0.592      ;
; -0.346 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.885      ; 0.539      ;
; -0.346 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.886      ; 0.540      ;
; -0.338 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.945      ; 0.607      ;
; -0.293 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.889      ; 0.596      ;
; -0.283 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.885      ; 0.602      ;
; -0.282 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.886      ; 0.604      ;
; -0.276 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.889      ; 0.613      ;
; -0.275 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.888      ; 0.613      ;
; -0.272 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.887      ; 0.615      ;
; -0.265 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.940      ; 0.675      ;
; -0.259 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.945      ; 0.686      ;
; -0.257 ; shiftReg:sB|ShiftedValues[3] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.887      ; 0.630      ;
; -0.220 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.889      ; 0.669      ;
; -0.216 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.888      ; 0.672      ;
; -0.207 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.885      ; 0.678      ;
; -0.206 ; shiftReg:sB|ShiftedValues[2] ; hexEncoder:hB1|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.887      ; 0.681      ;
; -0.203 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.886      ; 0.683      ;
; -0.141 ; shiftReg:sB|ShiftedValues[1] ; hexEncoder:hB1|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 0.000        ; 0.888      ; 0.747      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                          ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                ; Launch Clock       ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+
; -1.570 ; clk_div:c1|clk_out     ; clk_div:c1|clk_out     ; clk_div:c1|clk_out ; CLOCK_50    ; 0.000        ; 1.644      ; 0.367      ;
; -1.070 ; clk_div:c1|clk_out     ; clk_div:c1|clk_out     ; clk_div:c1|clk_out ; CLOCK_50    ; -0.500       ; 1.644      ; 0.367      ;
; 0.355  ; clk_div:c1|counter[13] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.507      ;
; 0.360  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[1]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clk_div:c1|counter[22] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clk_div:c1|counter[24] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.361  ; clk_div:c1|counter[11] ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clk_div:c1|counter[12] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clk_div:c1|counter[10] ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.363  ; clk_div:c1|counter[17] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.515      ;
; 0.363  ; clk_div:c1|counter[20] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.515      ;
; 0.369  ; clk_div:c1|counter[16] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.369  ; clk_div:c1|counter[18] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.371  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.372  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.375  ; clk_div:c1|counter[21] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.527      ;
; 0.376  ; clk_div:c1|counter[23] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.376  ; clk_div:c1|counter[25] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.439  ; clk_div:c1|counter[19] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.591      ;
; 0.494  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[1]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.498  ; clk_div:c1|counter[15] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clk_div:c1|counter[22] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clk_div:c1|counter[24] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.499  ; clk_div:c1|counter[10] ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clk_div:c1|counter[11] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.501  ; clk_div:c1|counter[17] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.653      ;
; 0.502  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.654      ;
; 0.509  ; clk_div:c1|counter[16] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.509  ; clk_div:c1|counter[18] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.512  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
; 0.515  ; clk_div:c1|counter[21] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.667      ;
; 0.516  ; clk_div:c1|counter[23] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.668      ;
; 0.529  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[2]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.681      ;
; 0.533  ; clk_div:c1|counter[15] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.685      ;
; 0.533  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.685      ;
; 0.533  ; clk_div:c1|counter[22] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.685      ;
; 0.534  ; clk_div:c1|counter[14] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.686      ;
; 0.534  ; clk_div:c1|counter[10] ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.686      ;
; 0.536  ; clk_div:c1|counter[17] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.688      ;
; 0.537  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.689      ;
; 0.544  ; clk_div:c1|counter[18] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.696      ;
; 0.544  ; clk_div:c1|counter[16] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.696      ;
; 0.546  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.698      ;
; 0.550  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.702      ;
; 0.550  ; clk_div:c1|counter[21] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.702      ;
; 0.551  ; clk_div:c1|counter[23] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.703      ;
; 0.555  ; clk_div:c1|counter[12] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 0.698      ;
; 0.556  ; clk_div:c1|counter[20] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.708      ;
; 0.563  ; clk_div:c1|counter[13] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.715      ;
; 0.564  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[3]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.716      ;
; 0.568  ; clk_div:c1|counter[15] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.720      ;
; 0.568  ; clk_div:c1|counter[22] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.720      ;
; 0.569  ; clk_div:c1|counter[14] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.721      ;
; 0.571  ; clk_div:c1|counter[17] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.723      ;
; 0.572  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.724      ;
; 0.577  ; clk_div:c1|counter[19] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.729      ;
; 0.579  ; clk_div:c1|counter[16] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.581  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.733      ;
; 0.581  ; clk_div:c1|counter[6]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.001     ; 0.732      ;
; 0.585  ; clk_div:c1|counter[21] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.737      ;
; 0.591  ; clk_div:c1|counter[20] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.743      ;
; 0.595  ; clk_div:c1|counter[11] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 0.738      ;
; 0.598  ; clk_div:c1|counter[13] ; clk_div:c1|counter[17] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.750      ;
; 0.599  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[4]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.751      ;
; 0.603  ; clk_div:c1|counter[15] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.755      ;
; 0.604  ; clk_div:c1|counter[14] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.756      ;
; 0.606  ; clk_div:c1|counter[15] ; clk_div:c1|counter[15] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.758      ;
; 0.606  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.758      ;
; 0.607  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[9]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.759      ;
; 0.609  ; clk_div:c1|counter[8]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.001     ; 0.760      ;
; 0.614  ; clk_div:c1|counter[16] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.766      ;
; 0.616  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.768      ;
; 0.620  ; clk_div:c1|counter[4]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.772      ;
; 0.620  ; clk_div:c1|counter[21] ; clk_div:c1|counter[25] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.772      ;
; 0.626  ; clk_div:c1|counter[20] ; clk_div:c1|counter[23] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.778      ;
; 0.630  ; clk_div:c1|counter[10] ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 0.773      ;
; 0.633  ; clk_div:c1|counter[13] ; clk_div:c1|counter[18] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.785      ;
; 0.638  ; clk_div:c1|counter[18] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.790      ;
; 0.638  ; clk_div:c1|counter[15] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.790      ;
; 0.639  ; clk_div:c1|counter[14] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.791      ;
; 0.641  ; clk_div:c1|counter[2]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.793      ;
; 0.644  ; clk_div:c1|counter[8]  ; clk_div:c1|counter[11] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.001     ; 0.795      ;
; 0.651  ; clk_div:c1|counter[7]  ; clk_div:c1|counter[12] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.803      ;
; 0.651  ; clk_div:c1|counter[5]  ; clk_div:c1|counter[10] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.803      ;
; 0.657  ; clk_div:c1|counter[0]  ; clk_div:c1|counter[0]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.809      ;
; 0.660  ; clk_div:c1|counter[12] ; clk_div:c1|counter[16] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 0.803      ;
; 0.661  ; clk_div:c1|counter[20] ; clk_div:c1|counter[24] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.813      ;
; 0.662  ; clk_div:c1|counter[10] ; clk_div:c1|clk_out     ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.001      ; 0.815      ;
; 0.662  ; clk_div:c1|counter[1]  ; clk_div:c1|counter[5]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.814      ;
; 0.664  ; clk_div:c1|counter[10] ; clk_div:c1|counter[6]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.001      ; 0.817      ;
; 0.665  ; clk_div:c1|counter[17] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.817      ;
; 0.668  ; clk_div:c1|counter[9]  ; clk_div:c1|counter[13] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; -0.009     ; 0.811      ;
; 0.668  ; clk_div:c1|counter[13] ; clk_div:c1|counter[19] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.820      ;
; 0.671  ; clk_div:c1|counter[19] ; clk_div:c1|counter[21] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.823      ;
; 0.673  ; clk_div:c1|counter[18] ; clk_div:c1|counter[22] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.825      ;
; 0.674  ; clk_div:c1|counter[14] ; clk_div:c1|counter[20] ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.826      ;
; 0.676  ; clk_div:c1|counter[3]  ; clk_div:c1|counter[7]  ; CLOCK_50           ; CLOCK_50    ; 0.000        ; 0.000      ; 0.828      ;
+--------+------------------------+------------------------+--------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_div:c1|clk_out'                                                                                                                                            ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                              ; Launch Clock                 ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+
; -1.558 ; shiftReg:sB|ShiftedValues[0]        ; shiftReg:sB|ShiftedValues[4]         ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; 0.000        ; 1.948      ; 0.683      ;
; -1.058 ; shiftReg:sB|ShiftedValues[0]        ; shiftReg:sB|ShiftedValues[4]         ; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out ; -0.500       ; 1.948      ; 0.683      ;
; 0.215  ; colFunction:c60|count[0]            ; colFunction:c60|count[0]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; colFunction:c60|count[1]            ; colFunction:c60|count[1]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; keypad:k1|value[0]                  ; keypad:k1|value[0]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; keypad:k1|value[2]                  ; keypad:k1|value[2]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; keypad:k1|value[3]                  ; keypad:k1|value[3]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; keypad:k1|value[1]                  ; keypad:k1|value[1]                   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.236  ; keypad:k1|In[1]                     ; keypad:k1|shiftRegDebounce:s1|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.388      ;
; 0.237  ; keypad:k1|shiftRegDebounce:s0|Q[3]  ; keypad:k1|shiftRegDebounce:s0|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.389      ;
; 0.239  ; keypad:k1|shiftRegDebounce:s6|Q[3]  ; keypad:k1|shiftRegDebounce:s6|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.239  ; keypad:k1|shiftRegDebounce:s4|Q[2]  ; keypad:k1|shiftRegDebounce:s4|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.239  ; keypad:k1|shiftRegDebounce:s2|Q[3]  ; keypad:k1|shiftRegDebounce:s2|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.239  ; keypad:k1|shiftRegDebounce:s7|Q[3]  ; keypad:k1|shiftRegDebounce:s7|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.239  ; keypad:k1|shiftRegDebounce:s9|Q[2]  ; keypad:k1|shiftRegDebounce:s9|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.240  ; keypad:k1|shiftRegDebounce:s2|Q[1]  ; keypad:k1|shiftRegDebounce:s2|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.392      ;
; 0.241  ; keypad:k1|shiftRegDebounce:s15|Q[2] ; keypad:k1|shiftRegDebounce:s15|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.393      ;
; 0.241  ; keypad:k1|shiftRegDebounce:s11|Q[3] ; keypad:k1|shiftRegDebounce:s11|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.393      ;
; 0.242  ; keypad:k1|shiftRegDebounce:s5|Q[3]  ; keypad:k1|shiftRegDebounce:s5|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.242  ; keypad:k1|shiftRegDebounce:s2|Q[1]  ; keypad:k1|shiftRegDebounce:s2|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.242  ; keypad:k1|In[10]                    ; keypad:k1|shiftRegDebounce:s10|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.242  ; keypad:k1|shiftRegDebounce:s9|Q[3]  ; keypad:k1|shiftRegDebounce:s9|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.243  ; keypad:k1|shiftRegDebounce:s4|Q[3]  ; keypad:k1|shiftRegDebounce:s4|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243  ; keypad:k1|shiftRegDebounce:s10|Q[3] ; keypad:k1|shiftRegDebounce:s10|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243  ; keypad:k1|shiftRegDebounce:s10|Q[2] ; keypad:k1|shiftRegDebounce:s10|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243  ; keypad:k1|shiftRegDebounce:s11|Q[2] ; keypad:k1|shiftRegDebounce:s11|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.244  ; keypad:k1|shiftRegDebounce:s6|Q[2]  ; keypad:k1|shiftRegDebounce:s6|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.396      ;
; 0.244  ; keypad:k1|shiftRegDebounce:s8|Q[2]  ; keypad:k1|shiftRegDebounce:s8|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.396      ;
; 0.244  ; keypad:k1|shiftRegDebounce:s12|Q[3] ; keypad:k1|shiftRegDebounce:s12|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.396      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s5|Q[1]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s4|Q[1]  ; keypad:k1|shiftRegDebounce:s4|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|In[8]                     ; keypad:k1|shiftRegDebounce:s8|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s14|Q[2] ; keypad:k1|shiftRegDebounce:s14|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s7|Q[1]  ; keypad:k1|shiftRegDebounce:s7|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s10|Q[1] ; keypad:k1|shiftRegDebounce:s10|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245  ; keypad:k1|shiftRegDebounce:s11|Q[1] ; keypad:k1|shiftRegDebounce:s11|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.246  ; keypad:k1|shiftRegDebounce:s0|Q[1]  ; keypad:k1|shiftRegDebounce:s0|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.398      ;
; 0.246  ; keypad:k1|shiftRegDebounce:s8|Q[3]  ; keypad:k1|shiftRegDebounce:s8|Q[2]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.398      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s5|Q[1]  ; keypad:k1|shiftRegDebounce:s5|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s3|Q[2]  ; keypad:k1|shiftRegDebounce:s3|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s3|Q[1]  ; keypad:k1|shiftRegDebounce:s3|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s1|Q[1]  ; keypad:k1|shiftRegDebounce:s1|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s14|Q[3] ; keypad:k1|shiftRegDebounce:s14|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.248  ; keypad:k1|shiftRegDebounce:s13|Q[1] ; keypad:k1|shiftRegDebounce:s13|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.249  ; keypad:k1|In[3]                     ; keypad:k1|shiftRegDebounce:s3|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.401      ;
; 0.249  ; keypad:k1|shiftRegDebounce:s1|Q[2]  ; keypad:k1|shiftRegDebounce:s1|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.401      ;
; 0.249  ; keypad:k1|shiftRegDebounce:s13|Q[3] ; keypad:k1|shiftRegDebounce:s13|Q[2]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.401      ;
; 0.251  ; keypad:k1|shiftRegDebounce:s15|Q[1] ; keypad:k1|shiftRegDebounce:s15|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.403      ;
; 0.251  ; keypad:k1|shiftRegDebounce:s15|Q[1] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.403      ;
; 0.252  ; keypad:k1|shiftRegDebounce:s13|Q[2] ; keypad:k1|shiftRegDebounce:s13|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.404      ;
; 0.253  ; keypad:k1|shiftRegDebounce:s13|Q[3] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.405      ;
; 0.314  ; keypad:k1|shiftRegDebounce:s0|Q[0]  ; keypad:k1|shiftRegDebounce:s0|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.466      ;
; 0.314  ; keypad:k1|In[15]                    ; keypad:k1|shiftRegDebounce:s15|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; -0.001     ; 0.465      ;
; 0.314  ; keypad:k1|shiftRegDebounce:s1|Q[0]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.466      ;
; 0.317  ; keypad:k1|shiftRegDebounce:s3|Q[0]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.469      ;
; 0.317  ; keypad:k1|shiftRegDebounce:s15|Q[0] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.469      ;
; 0.318  ; keypad:k1|In[12]                    ; keypad:k1|shiftRegDebounce:s12|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.470      ;
; 0.319  ; keypad:k1|In[0]                     ; keypad:k1|shiftRegDebounce:s0|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.001      ; 0.472      ;
; 0.320  ; keypad:k1|In[7]                     ; keypad:k1|shiftRegDebounce:s7|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; -0.001     ; 0.471      ;
; 0.322  ; keypad:k1|In[9]                     ; keypad:k1|shiftRegDebounce:s9|Q[3]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.474      ;
; 0.324  ; keypad:k1|In[11]                    ; keypad:k1|shiftRegDebounce:s11|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.476      ;
; 0.324  ; keypad:k1|shiftRegDebounce:s5|Q[0]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.476      ;
; 0.325  ; keypad:k1|shiftRegDebounce:s13|Q[0] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.477      ;
; 0.326  ; keypad:k1|shiftRegDebounce:s9|Q[1]  ; keypad:k1|shiftRegDebounce:s9|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.478      ;
; 0.329  ; keypad:k1|shiftRegDebounce:s14|Q[1] ; keypad:k1|shiftRegDebounce:s14|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.481      ;
; 0.331  ; keypad:k1|shiftRegDebounce:s7|Q[2]  ; keypad:k1|shiftRegDebounce:s7|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.483      ;
; 0.331  ; keypad:k1|shiftRegDebounce:s12|Q[2] ; keypad:k1|shiftRegDebounce:s12|Q[1]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.483      ;
; 0.333  ; keypad:k1|shiftRegDebounce:s5|Q[2]  ; keypad:k1|shiftRegDebounce:s5|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.485      ;
; 0.334  ; keypad:k1|shiftRegDebounce:s12|Q[1] ; keypad:k1|shiftRegDebounce:s12|Q[0]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.486      ;
; 0.338  ; shiftReg:sB|ShiftedValues[1]        ; shiftReg:sB|ShiftedValues[5]         ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.087      ; 0.577      ;
; 0.357  ; key_press1                          ; Enable[1]                            ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.509      ;
; 0.363  ; keypad:k1|shiftRegDebounce:s15|Q[2] ; keypad:k1|shiftRegDebounce:s15|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.515      ;
; 0.368  ; keypad:k1|shiftRegDebounce:s3|Q[2]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.520      ;
; 0.371  ; keypad:k1|shiftRegDebounce:s1|Q[1]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.523      ;
; 0.372  ; keypad:k1|shiftRegDebounce:s5|Q[2]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.524      ;
; 0.376  ; keypad:k1|shiftRegDebounce:s13|Q[2] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.528      ;
; 0.377  ; keypad:k1|shiftRegDebounce:s2|Q[0]  ; keypad:k1|shiftRegDebounce:s2|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.529      ;
; 0.381  ; keypad:k1|shiftRegDebounce:s13|Q[1] ; keypad:k1|shiftRegDebounce:s13|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.533      ;
; 0.382  ; keypad:k1|shiftRegDebounce:s5|Q[3]  ; keypad:k1|shiftRegDebounce:s5|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.534      ;
; 0.382  ; keypad:k1|shiftRegDebounce:s0|Q[1]  ; keypad:k1|shiftRegDebounce:s0|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.534      ;
; 0.384  ; keypad:k1|shiftRegDebounce:s1|Q[2]  ; keypad:k1|shiftRegDebounce:s1|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.536      ;
; 0.385  ; colFunction:c60|count[0]            ; colFunction:c60|count[1]             ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.537      ;
; 0.388  ; keypad:k1|shiftRegDebounce:s3|Q[1]  ; keypad:k1|shiftRegDebounce:s3|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.540      ;
; 0.389  ; colFunction:c60|count[0]            ; keypad:k1|In[8]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.541      ;
; 0.390  ; colFunction:c60|count[0]            ; keypad:k1|In[12]                     ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.542      ;
; 0.394  ; colFunction:c60|count[0]            ; keypad:k1|In[4]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.546      ;
; 0.398  ; colFunction:c60|count[1]            ; keypad:k1|In[8]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.550      ;
; 0.398  ; colFunction:c60|count[1]            ; keypad:k1|In[12]                     ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.550      ;
; 0.398  ; colFunction:c60|count[1]            ; keypad:k1|In[4]                      ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.550      ;
; 0.408  ; keypad:k1|shiftRegDebounce:s6|Q[1]  ; keypad:k1|shiftRegDebounce:s6|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.560      ;
; 0.409  ; keypad:k1|shiftRegDebounce:s8|Q[1]  ; keypad:k1|shiftRegDebounce:s8|Q[0]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.000      ; 0.561      ;
; 0.422  ; keypad:k1|shiftRegDebounce:s4|Q[0]  ; keypad:k1|shiftRegDebounce:s4|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.002      ; 0.576      ;
; 0.424  ; keypad:k1|shiftRegDebounce:s6|Q[2]  ; keypad:k1|shiftRegDebounce:s6|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.002      ; 0.578      ;
; 0.429  ; keypad:k1|shiftRegDebounce:s2|Q[2]  ; keypad:k1|shiftRegDebounce:s2|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.002      ; 0.583      ;
; 0.437  ; keypad:k1|shiftRegDebounce:s0|Q[3]  ; keypad:k1|shiftRegDebounce:s0|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.009      ; 0.598      ;
; 0.439  ; keypad:k1|shiftRegDebounce:s0|Q[2]  ; keypad:k1|shiftRegDebounce:s0|Q[1]   ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.009      ; 0.600      ;
; 0.439  ; keypad:k1|shiftRegDebounce:s11|Q[0] ; keypad:k1|shiftRegDebounce:s11|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.009      ; 0.600      ;
; 0.440  ; keypad:k1|shiftRegDebounce:s7|Q[2]  ; keypad:k1|shiftRegDebounce:s7|Equal  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.001      ; 0.593      ;
; 0.442  ; keypad:k1|shiftRegDebounce:s10|Q[1] ; keypad:k1|shiftRegDebounce:s10|Equal ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.009      ; 0.603      ;
; 0.445  ; keypad:k1|In[13]                    ; keypad:k1|shiftRegDebounce:s13|Q[3]  ; clk_div:c1|clk_out           ; clk_div:c1|clk_out ; 0.000        ; 0.010      ; 0.607      ;
+--------+-------------------------------------+--------------------------------------+------------------------------+--------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'shiftReg:sB|ShiftedValues[4]'                                                                                                                      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node               ; Launch Clock                 ; Latch Clock                  ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+
; -1.501 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.849      ; 0.489      ;
; -1.001 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[1] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.849      ; 0.489      ;
; -0.945 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.929      ; 1.125      ;
; -0.902 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.841      ; 1.080      ;
; -0.900 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.840      ; 1.081      ;
; -0.898 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.841      ; 1.084      ;
; -0.865 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.850      ; 1.126      ;
; -0.864 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 1.850      ; 1.127      ;
; -0.445 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[2] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.929      ; 1.125      ;
; -0.402 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[6] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.841      ; 1.080      ;
; -0.400 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[0] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.840      ; 1.081      ;
; -0.398 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[5] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.841      ; 1.084      ;
; -0.365 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[3] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.850      ; 1.126      ;
; -0.364 ; shiftReg:sB|ShiftedValues[4] ; hexEncoder:hB2|HEX[4] ; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; -0.500       ; 1.850      ; 1.127      ;
; -0.204 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.744      ; 0.540      ;
; -0.138 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.744      ; 0.606      ;
; -0.129 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.664      ; 0.535      ;
; -0.125 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.531      ;
; -0.122 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.543      ;
; -0.115 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.655      ; 0.540      ;
; -0.091 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[2] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.744      ; 0.653      ;
; -0.068 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.597      ;
; -0.066 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.599      ;
; -0.063 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.655      ; 0.592      ;
; -0.056 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.600      ;
; -0.055 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.610      ;
; -0.054 ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.602      ;
; -0.046 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.610      ;
; -0.014 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.664      ; 0.650      ;
; -0.012 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[4] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.653      ;
; -0.006 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[6] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.650      ;
; -0.006 ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[3] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.665      ; 0.659      ;
; -0.005 ; shiftReg:sB|ShiftedValues[5] ; hexEncoder:hB2|HEX[0] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.655      ; 0.650      ;
; 0.003  ; shiftReg:sB|ShiftedValues[6] ; hexEncoder:hB2|HEX[5] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.656      ; 0.659      ;
; 0.016  ; shiftReg:sB|ShiftedValues[7] ; hexEncoder:hB2|HEX[1] ; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 0.000        ; 0.664      ; 0.680      ;
+--------+------------------------------+-----------------------+------------------------------+------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[10]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[10]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[11]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[11]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[12]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[12]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[13]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[13]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[14]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[14]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[15]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[15]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[16]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[16]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[17]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[17]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[18]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[18]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[19]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[19]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[20]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[20]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[21]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[21]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[22]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[22]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[23]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[23]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[24]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[24]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[25]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[25]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clk_div:c1|counter[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clk_div:c1|counter[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|clk_out|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|clk_out|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[10]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[10]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[11]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[11]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[12]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[12]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[13]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[13]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[14]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[14]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[15]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[15]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[16]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[16]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[17]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[17]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[18]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[18]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[19]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[19]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[20]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[20]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[21]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[21]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[22]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[22]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[23]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[23]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[24]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[24]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[25]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; c1|counter[25]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; c1|counter[2]|clk         ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_div:c1|clk_out'                                                                               ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock              ; Clock Edge ; Target                               ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Enable[1]                            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Enable[1]                            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[0]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[0]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[1]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[1]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Operator[2]                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Operator[2]                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Sign[0]                              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Sign[0]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; Sign[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; Sign[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|col[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; colFunction:c60|count[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; key_press1                           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; key_press1                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[10]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[10]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[11]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[11]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[12]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[12]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[13]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[13]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[14]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[14]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[15]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[15]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[6]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[6]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[7]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[7]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[8]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[8]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[9]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|In[9]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[2]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[2]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[3]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|enableShift[3]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|key_press                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|key_press                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Equal  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Equal  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s0|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Equal ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s10|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Equal ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s11|Q[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s12|Equal ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_div:c1|clk_out ; Rise       ; keypad:k1|shiftRegDebounce:s12|Equal ;
+--------+--------------+----------------+------------------+--------------------+------------+--------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[0]'                                                                    ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                        ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[1]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[1]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[2]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[2]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[6]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|HEX[6]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hB1|Mux7~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; hexEncoder:hB1|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[0] ; Rise       ; sB|ShiftedValues[0]|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[0] ; Rise       ; sB|ShiftedValues[0]|regout ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'shiftReg:sB|ShiftedValues[4]'                                                                    ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                        ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[0]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[1]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[1]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[2]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[2]|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[3]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[4]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[5]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[6]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|HEX[6]|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hB2|Mux7~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[1]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[2]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[3]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[4]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[5]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; hexEncoder:hB2|HEX[6]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; shiftReg:sB|ShiftedValues[4] ; Rise       ; sB|ShiftedValues[4]|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; shiftReg:sB|ShiftedValues[4] ; Rise       ; sB|ShiftedValues[4]|regout ;
+-------+--------------+----------------+------------------+------------------------------+------------+----------------------------+


+------------------------------------------------------------------------------------+
; Setup Times                                                                        ;
+-------------+--------------------+-------+-------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise  ; Fall  ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+-------+-------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; 2.233 ; 2.233 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; 2.227 ; 2.227 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; 2.068 ; 2.068 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; 2.172 ; 2.172 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; 2.233 ; 2.233 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; 1.728 ; 1.728 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; 1.576 ; 1.576 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; 1.728 ; 1.728 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+-------+-------+------------+--------------------+


+--------------------------------------------------------------------------------------+
; Hold Times                                                                           ;
+-------------+--------------------+--------+--------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise   ; Fall   ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+--------+--------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; -1.644 ; -1.644 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; -1.803 ; -1.803 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; -1.644 ; -1.644 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; -1.748 ; -1.748 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; -1.809 ; -1.809 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; -1.456 ; -1.456 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; -1.456 ; -1.456 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; -1.608 ; -1.608 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+--------+--------+------------+--------------------+


+--------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                  ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 3.927 ; 3.927 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 3.832 ; 3.832 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 3.927 ; 3.927 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 3.714 ; 3.714 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 3.858 ; 3.858 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 5.091 ; 5.091 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 5.024 ; 5.024 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 4.979 ; 4.979 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 5.091 ; 5.091 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 4.973 ; 4.973 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 4.801 ; 4.801 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 3.040 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 4.783 ; 4.783 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 4.048 ; 4.048 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 4.783 ; 4.783 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 4.553 ; 4.553 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 3.919 ; 3.919 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.909 ; 3.909 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 3.919 ; 3.919 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.896 ; 3.896 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 3.705 ; 3.705 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 3.856 ; 3.856 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.845 ; 3.845 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 3.779 ; 3.779 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 4.072 ; 4.072 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.916 ; 3.916 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 4.072 ; 4.072 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.884 ; 3.884 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 4.020 ; 4.020 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 4.015 ; 4.015 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.987 ; 3.987 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 4.040 ; 4.040 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 3.720 ; 3.720 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.565 ; 3.565 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.544 ; 3.544 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 3.720 ; 3.720 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.692 ; 3.692 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.594 ; 3.594 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.589 ; 3.589 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.608 ; 3.608 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 4.135 ; 4.135 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.988 ; 3.988 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.995 ; 3.995 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 4.135 ; 4.135 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.951 ; 3.951 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.888 ; 3.888 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.928 ; 3.928 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.913 ; 3.913 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                          ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 3.714 ; 3.714 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 3.832 ; 3.832 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 3.927 ; 3.927 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 3.714 ; 3.714 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 3.858 ; 3.858 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 3.040 ; 4.801 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 5.024 ; 5.024 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 4.979 ; 4.979 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 5.091 ; 5.091 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 4.973 ; 4.973 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 4.801 ; 4.801 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 3.040 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 4.048 ; 4.048 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 4.783 ; 4.783 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 4.553 ; 4.553 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 3.705 ; 3.705 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.909 ; 3.909 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 3.919 ; 3.919 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.896 ; 3.896 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 3.705 ; 3.705 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 3.856 ; 3.856 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.845 ; 3.845 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 3.779 ; 3.779 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 3.884 ; 3.884 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.916 ; 3.916 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 4.072 ; 4.072 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.884 ; 3.884 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 4.020 ; 4.020 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 4.015 ; 4.015 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.987 ; 3.987 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 4.040 ; 4.040 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 3.544 ; 3.544 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.565 ; 3.565 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.544 ; 3.544 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 3.720 ; 3.720 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.692 ; 3.692 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.594 ; 3.594 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.589 ; 3.589 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.608 ; 3.608 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 3.888 ; 3.888 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.988 ; 3.988 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.995 ; 3.995 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 4.135 ; 4.135 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.951 ; 3.951 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.888 ; 3.888 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.928 ; 3.928 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.913 ; 3.913 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+-----------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                           ;
+-------------------------------+----------+---------+----------+---------+---------------------+
; Clock                         ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+-------------------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack              ; -3.751   ; -3.023  ; N/A      ; N/A     ; -1.380              ;
;  CLOCK_50                     ; -2.374   ; -2.526  ; N/A      ; N/A     ; -1.380              ;
;  clk_div:c1|clk_out           ; -3.751   ; -2.521  ; N/A      ; N/A     ; -0.500              ;
;  shiftReg:sB|ShiftedValues[0] ; -0.722   ; -3.023  ; N/A      ; N/A     ; 0.500               ;
;  shiftReg:sB|ShiftedValues[4] ; -0.805   ; -2.726  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS               ; -164.14  ; -31.617 ; 0.0      ; 0.0     ; -154.38             ;
;  CLOCK_50                     ; -43.934  ; -2.526  ; N/A      ; N/A     ; -28.380             ;
;  clk_div:c1|clk_out           ; -115.904 ; -2.521  ; N/A      ; N/A     ; -126.000            ;
;  shiftReg:sB|ShiftedValues[0] ; -1.549   ; -16.065 ; N/A      ; N/A     ; 0.000               ;
;  shiftReg:sB|ShiftedValues[4] ; -2.753   ; -10.505 ; N/A      ; N/A     ; 0.000               ;
+-------------------------------+----------+---------+----------+---------+---------------------+


+------------------------------------------------------------------------------------+
; Setup Times                                                                        ;
+-------------+--------------------+-------+-------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise  ; Fall  ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+-------+-------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; 4.162 ; 4.162 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; 4.146 ; 4.146 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; 3.772 ; 3.772 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; 3.984 ; 3.984 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; 4.162 ; 4.162 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; 2.943 ; 2.943 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; 2.706 ; 2.706 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; 2.943 ; 2.943 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+-------+-------+------------+--------------------+


+--------------------------------------------------------------------------------------+
; Hold Times                                                                           ;
+-------------+--------------------+--------+--------+------------+--------------------+
; Data Port   ; Clock Port         ; Rise   ; Fall   ; Clock Edge ; Clock Reference    ;
+-------------+--------------------+--------+--------+------------+--------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out ; -1.644 ; -1.644 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[18] ; clk_div:c1|clk_out ; -1.803 ; -1.803 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[20] ; clk_div:c1|clk_out ; -1.644 ; -1.644 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[22] ; clk_div:c1|clk_out ; -1.748 ; -1.748 ; Rise       ; clk_div:c1|clk_out ;
;  GPIO_0[24] ; clk_div:c1|clk_out ; -1.809 ; -1.809 ; Rise       ; clk_div:c1|clk_out ;
; SW[*]       ; clk_div:c1|clk_out ; -1.456 ; -1.456 ; Rise       ; clk_div:c1|clk_out ;
;  SW[16]     ; clk_div:c1|clk_out ; -1.456 ; -1.456 ; Rise       ; clk_div:c1|clk_out ;
;  SW[17]     ; clk_div:c1|clk_out ; -1.608 ; -1.608 ; Rise       ; clk_div:c1|clk_out ;
+-------------+--------------------+--------+--------+------------+--------------------+


+--------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                  ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 7.163 ; 7.163 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 6.942 ; 6.942 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 7.163 ; 7.163 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 6.709 ; 6.709 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 7.008 ; 7.008 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 9.496 ; 9.496 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 9.342 ; 9.342 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 9.124 ; 9.124 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 9.496 ; 9.496 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 9.233 ; 9.233 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 8.731 ; 8.731 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 5.986 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 8.827 ; 8.827 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 7.289 ; 7.289 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 7.062 ; 7.062 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 7.061 ; 7.061 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 8.827 ; 8.827 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 8.377 ; 8.377 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 5.986 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.499 ; 7.499 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.472 ; 7.472 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.499 ; 7.499 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.441 ; 7.441 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.049 ; 7.049 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.356 ; 7.356 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.338 ; 7.338 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.194 ; 7.194 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 7.847 ; 7.847 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 7.487 ; 7.487 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 7.847 ; 7.847 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 7.426 ; 7.426 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 7.611 ; 7.611 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 7.603 ; 7.603 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 7.567 ; 7.567 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 7.695 ; 7.695 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 7.104 ; 7.104 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 6.725 ; 6.725 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 6.714 ; 6.714 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.104 ; 7.104 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.012 ; 7.012 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 6.825 ; 6.825 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 6.816 ; 6.816 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 6.829 ; 6.829 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 7.916 ; 7.916 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 7.551 ; 7.551 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 7.561 ; 7.561 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 7.916 ; 7.916 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 7.509 ; 7.509 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 7.354 ; 7.354 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 7.388 ; 7.388 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 7.359 ; 7.359 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                          ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; Data Port   ; Clock Port                   ; Rise  ; Fall  ; Clock Edge ; Clock Reference              ;
+-------------+------------------------------+-------+-------+------------+------------------------------+
; GPIO_0[*]   ; clk_div:c1|clk_out           ; 3.714 ; 3.714 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[10] ; clk_div:c1|clk_out           ; 3.832 ; 3.832 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[12] ; clk_div:c1|clk_out           ; 3.927 ; 3.927 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[14] ; clk_div:c1|clk_out           ; 3.714 ; 3.714 ; Rise       ; clk_div:c1|clk_out           ;
;  GPIO_0[16] ; clk_div:c1|clk_out           ; 3.858 ; 3.858 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ; 3.040 ; 4.801 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[0]    ; clk_div:c1|clk_out           ; 5.024 ; 5.024 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[1]    ; clk_div:c1|clk_out           ; 4.979 ; 4.979 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[2]    ; clk_div:c1|clk_out           ; 5.091 ; 5.091 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[3]    ; clk_div:c1|clk_out           ; 4.973 ; 4.973 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[4]    ; clk_div:c1|clk_out           ; 4.801 ; 4.801 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ; 3.040 ;       ; Rise       ; clk_div:c1|clk_out           ;
; LEDR[*]     ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[5]    ; clk_div:c1|clk_out           ; 4.048 ; 4.048 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[6]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[7]    ; clk_div:c1|clk_out           ; 3.943 ; 3.943 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[16]   ; clk_div:c1|clk_out           ; 4.783 ; 4.783 ; Rise       ; clk_div:c1|clk_out           ;
;  LEDR[17]   ; clk_div:c1|clk_out           ; 4.553 ; 4.553 ; Rise       ; clk_div:c1|clk_out           ;
; LEDG[*]     ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
;  LEDG[5]    ; clk_div:c1|clk_out           ;       ; 3.040 ; Fall       ; clk_div:c1|clk_out           ;
; HEX4[*]     ; shiftReg:sB|ShiftedValues[0] ; 3.705 ; 3.705 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.909 ; 3.909 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[1]    ; shiftReg:sB|ShiftedValues[0] ; 3.919 ; 3.919 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.896 ; 3.896 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[3]    ; shiftReg:sB|ShiftedValues[0] ; 3.705 ; 3.705 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[4]    ; shiftReg:sB|ShiftedValues[0] ; 3.856 ; 3.856 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.845 ; 3.845 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX4[6]    ; shiftReg:sB|ShiftedValues[0] ; 3.779 ; 3.779 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX6[*]     ; shiftReg:sB|ShiftedValues[0] ; 3.884 ; 3.884 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[0]    ; shiftReg:sB|ShiftedValues[0] ; 3.916 ; 3.916 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[1]    ; shiftReg:sB|ShiftedValues[0] ; 4.072 ; 4.072 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[2]    ; shiftReg:sB|ShiftedValues[0] ; 3.884 ; 3.884 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[3]    ; shiftReg:sB|ShiftedValues[0] ; 4.020 ; 4.020 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[4]    ; shiftReg:sB|ShiftedValues[0] ; 4.015 ; 4.015 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[5]    ; shiftReg:sB|ShiftedValues[0] ; 3.987 ; 3.987 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
;  HEX6[6]    ; shiftReg:sB|ShiftedValues[0] ; 4.040 ; 4.040 ; Rise       ; shiftReg:sB|ShiftedValues[0] ;
; HEX5[*]     ; shiftReg:sB|ShiftedValues[4] ; 3.544 ; 3.544 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.565 ; 3.565 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.544 ; 3.544 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[2]    ; shiftReg:sB|ShiftedValues[4] ; 3.720 ; 3.720 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.692 ; 3.692 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.594 ; 3.594 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.589 ; 3.589 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX5[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.608 ; 3.608 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
; HEX7[*]     ; shiftReg:sB|ShiftedValues[4] ; 3.888 ; 3.888 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[0]    ; shiftReg:sB|ShiftedValues[4] ; 3.988 ; 3.988 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[1]    ; shiftReg:sB|ShiftedValues[4] ; 3.995 ; 3.995 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[2]    ; shiftReg:sB|ShiftedValues[4] ; 4.135 ; 4.135 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[3]    ; shiftReg:sB|ShiftedValues[4] ; 3.951 ; 3.951 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[4]    ; shiftReg:sB|ShiftedValues[4] ; 3.888 ; 3.888 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[5]    ; shiftReg:sB|ShiftedValues[4] ; 3.928 ; 3.928 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
;  HEX7[6]    ; shiftReg:sB|ShiftedValues[4] ; 3.913 ; 3.913 ; Rise       ; shiftReg:sB|ShiftedValues[4] ;
+-------------+------------------------------+-------+-------+------------+------------------------------+


+---------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                         ;
+------------------------------+------------------------------+----------+----------+----------+----------+
; From Clock                   ; To Clock                     ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------------+------------------------------+----------+----------+----------+----------+
; clk_div:c1|clk_out           ; clk_div:c1|clk_out           ; 1857     ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out           ; 1        ; 1        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; CLOCK_50                     ; 1        ; 1        ; 0        ; 0        ;
; CLOCK_50                     ; CLOCK_50                     ; 559      ; 0        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 21       ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 7        ; 7        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 21       ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 7        ; 7        ; 0        ; 0        ;
+------------------------------+------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                          ;
+------------------------------+------------------------------+----------+----------+----------+----------+
; From Clock                   ; To Clock                     ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------------+------------------------------+----------+----------+----------+----------+
; clk_div:c1|clk_out           ; clk_div:c1|clk_out           ; 1857     ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[0] ; clk_div:c1|clk_out           ; 1        ; 1        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; CLOCK_50                     ; 1        ; 1        ; 0        ; 0        ;
; CLOCK_50                     ; CLOCK_50                     ; 559      ; 0        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[0] ; 21       ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[0] ; shiftReg:sB|ShiftedValues[0] ; 7        ; 7        ; 0        ; 0        ;
; clk_div:c1|clk_out           ; shiftReg:sB|ShiftedValues[4] ; 21       ; 0        ; 0        ; 0        ;
; shiftReg:sB|ShiftedValues[4] ; shiftReg:sB|ShiftedValues[4] ; 7        ; 7        ; 0        ; 0        ;
+------------------------------+------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 6     ; 6    ;
; Unconstrained Input Port Paths  ; 66    ; 66   ;
; Unconstrained Output Ports      ; 43    ; 43   ;
; Unconstrained Output Port Paths ; 43    ; 43   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 12.0 Build 178 05/31/2012 SJ Full Version
    Info: Processing started: Fri Sep 23 14:47:46 2016
Info: Command: quartus_sta MECHENG371_Project -c MECHENG371_Project
Info: qsta_default_script.tcl version: #4
Info (20030): Parallel compilation is enabled and will use 4 of the 4 processors detected
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 14 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'MECHENG371_Project.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name clk_div:c1|clk_out clk_div:c1|clk_out
    Info (332105): create_clock -period 1.000 -name shiftReg:sB|ShiftedValues[0] shiftReg:sB|ShiftedValues[0]
    Info (332105): create_clock -period 1.000 -name shiftReg:sB|ShiftedValues[4] shiftReg:sB|ShiftedValues[4]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.751
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.751      -115.904 clk_div:c1|clk_out 
    Info (332119):    -2.374       -43.934 CLOCK_50 
    Info (332119):    -0.805        -2.753 shiftReg:sB|ShiftedValues[4] 
    Info (332119):    -0.722        -1.549 shiftReg:sB|ShiftedValues[0] 
Info (332146): Worst-case hold slack is -3.023
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.023       -16.065 shiftReg:sB|ShiftedValues[0] 
    Info (332119):    -2.726       -10.505 shiftReg:sB|ShiftedValues[4] 
    Info (332119):    -2.526        -2.526 CLOCK_50 
    Info (332119):    -2.521        -2.521 clk_div:c1|clk_out 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -28.380 CLOCK_50 
    Info (332119):    -0.500      -126.000 clk_div:c1|clk_out 
    Info (332119):     0.500         0.000 shiftReg:sB|ShiftedValues[0] 
    Info (332119):     0.500         0.000 shiftReg:sB|ShiftedValues[4] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.527
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.527       -16.030 clk_div:c1|clk_out 
    Info (332119):    -0.633        -7.515 CLOCK_50 
    Info (332119):     0.364         0.000 shiftReg:sB|ShiftedValues[0] 
    Info (332119):     0.364         0.000 shiftReg:sB|ShiftedValues[4] 
Info (332146): Worst-case hold slack is -1.637
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.637        -9.352 shiftReg:sB|ShiftedValues[0] 
    Info (332119):    -1.570        -1.570 CLOCK_50 
    Info (332119):    -1.558        -1.558 clk_div:c1|clk_out 
    Info (332119):    -1.501        -6.875 shiftReg:sB|ShiftedValues[4] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -28.380 CLOCK_50 
    Info (332119):    -0.500      -126.000 clk_div:c1|clk_out 
    Info (332119):     0.500         0.000 shiftReg:sB|ShiftedValues[0] 
    Info (332119):     0.500         0.000 shiftReg:sB|ShiftedValues[4] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 399 megabytes
    Info: Processing ended: Fri Sep 23 14:47:48 2016
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


